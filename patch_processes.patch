Index: src/main/java/com/egartech/sppi/configuration/StepUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/egartech/sppi/configuration/StepUtils.java	(date 1536140631000)
+++ src/main/java/com/egartech/sppi/configuration/StepUtils.java	(date 1536674805000)
@@ -1,5 +1,6 @@
 package com.egartech.sppi.configuration;
 
+import com.egartech.sppi.model.Process;
 import com.egartech.sppi.model.Product;
 import com.egartech.sppi.model.Question;
 import com.egartech.sppi.model.Step;
@@ -28,7 +29,7 @@
         return step.getNext();
     }
 
-    public Question getFirstQuestion(String productCode) {
+    public Question getFirstQuestion(String productCode, Process process) {
         Product product = new Product(productCode);
         KieSession kieSession = kieContainer.newKieSession();
         kieSession.insert(product);
Index: src/main/java/com/egartech/sppi/model/Process.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/egartech/sppi/model/Process.java	(date 1536140631000)
+++ src/main/java/com/egartech/sppi/model/Process.java	(date 1536671625000)
@@ -1,6 +1,9 @@
 package com.egartech.sppi.model;
 
 import javax.persistence.*;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
 
 @Entity
 @Table(name="process")
@@ -13,11 +16,24 @@
             sequenceName = "process_sequence",
             allocationSize = 1
     )
-    Long id;
+    private Long id;
     
     @Column(name = "comment")
     private String comment;
-    
+
+    @OneToMany(
+            cascade = CascadeType.ALL,
+            orphanRemoval = true,
+            fetch = FetchType.EAGER
+    )
+    private List<ProcessStep> processSteps = new ArrayList<>();//потом заменить на TreeSet
+
+    @Column(name = "date_start")
+    private Date dateStart;
+
+    @Column(name = "product_name")
+    private String productName;
+
     public Long getId() {
         return id;
     }
@@ -32,6 +48,33 @@
     
     public void setComment(String comment) {
         this.comment = comment;
-    }    
-    
+    }
+
+    public List<ProcessStep> getProcessSteps() {
+        return processSteps;
+    }
+
+    public void setProcessSteps(List<ProcessStep> processSteps) {
+        this.processSteps = processSteps;
+    }
+
+    public Date getDateStart() {
+        return dateStart;
+    }
+
+    public void setDateStart(Date dateStart) {
+        this.dateStart = dateStart;
+    }
+
+    public Question getLastQuestion() {//временный метод, пототм переделать на TreeSet
+        return processSteps.get(processSteps.size() - 1).getQuestion();
+    }
+
+    public String getProductName() {
+        return productName;
+    }
+
+    public void setProductName(String productName) {
+        this.productName = productName;
+    }
 }
Index: src/main/java/com/egartech/sppi/model/ProcessStep.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/egartech/sppi/model/ProcessStep.java	(date 1536681447000)
+++ src/main/java/com/egartech/sppi/model/ProcessStep.java	(date 1536681447000)
@@ -0,0 +1,84 @@
+package com.egartech.sppi.model;
+
+import javax.persistence.*;
+
+@Entity
+@Table(name = "process_step")
+public class ProcessStep {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "process_step_seq")
+    @SequenceGenerator(
+            name = "process_step_seq",
+            sequenceName = "process_step_sequence",
+            allocationSize = 1
+    )
+    private Long id;
+
+    @Column(name = "answer")
+    private String answer;
+
+    @OneToOne(cascade=CascadeType.ALL, fetch = FetchType.EAGER)
+    @JoinColumn(name = "id")
+//    @PrimaryKeyJoinColumn
+    private Question question;
+
+    @Column(name = "step_number")
+    private Integer stepNumber;
+
+    @ManyToOne
+    @JoinColumn(name = "id", insertable=false, updatable=false)
+    private Process process;
+
+    /*@ManyToOne
+    @JoinColumn(name = "process_id", insertable = false, updatable = false)
+    private Process process;*/
+
+    public Long getId() {
+        return id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public String getAnswer() {
+        return answer;
+    }
+
+    public void setAnswer(String answer) {
+        this.answer = answer;
+    }
+
+    public Question getQuestion() {
+        return question;
+    }
+
+    public void setQuestion(Question question) {
+        this.question = question;
+    }
+
+    public Integer getStepNumber() {
+        return stepNumber;
+    }
+
+    public void setStepNumber(Integer stepNumber) {
+        this.stepNumber = stepNumber;
+    }
+
+    /*public Process getProcess() {
+        return process;
+    }
+
+    public void setProcess(Process process) {
+        this.process = process;
+    }*/
+
+    public Process getProcess() {
+        return process;
+    }
+
+    public void setProcess(Process process) {
+        this.process = process;
+    }
+}
Index: src/main/java/com/egartech/sppi/model/Step.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/egartech/sppi/model/Step.java	(date 1536140631000)
+++ src/main/java/com/egartech/sppi/model/Step.java	(date 1536675661000)
@@ -5,6 +5,7 @@
     private Question current;
     private Question next=null;
     private String answer;
+    //add process or process_id
 
     public Step(Question current, String answer){
         this.current = current;
Index: src/main/java/com/egartech/sppi/repo/ProcessRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/egartech/sppi/repo/ProcessRepository.java	(date 1536666837000)
+++ src/main/java/com/egartech/sppi/repo/ProcessRepository.java	(date 1536666837000)
@@ -0,0 +1,8 @@
+package com.egartech.sppi.repo;
+
+import com.egartech.sppi.model.Process;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
+
+public interface ProcessRepository extends JpaRepository<Process, Long>, JpaSpecificationExecutor<Process> {
+}
Index: src/main/java/com/egartech/sppi/web/HomeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/egartech/sppi/web/HomeController.java	(date 1536140631000)
+++ src/main/java/com/egartech/sppi/web/HomeController.java	(date 1536675729000)
@@ -3,6 +3,7 @@
 import com.egartech.sppi.configuration.StepUtils;
 import com.egartech.sppi.model.Process;
 import com.egartech.sppi.model.Question;
+import com.egartech.sppi.repo.ProcessRepository;
 import com.egartech.sppi.repo.QuestionRepository;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.HttpStatus;
@@ -15,6 +16,8 @@
 import org.springframework.web.bind.annotation.RequestMethod;
 import org.springframework.web.servlet.ModelAndView;
 
+import java.util.Date;
+import java.util.List;
 import java.util.Map;
 
 @Controller
@@ -25,6 +28,9 @@
 
     @Autowired
     StepUtils stepUtils;
+
+    @Autowired
+    ProcessRepository processRepository;
     
     @RequestMapping(value="/", method = RequestMethod.GET)
     public ModelAndView getHomeView() {
@@ -35,8 +41,19 @@
     @PostMapping(value="/start_process", consumes = MediaType.APPLICATION_JSON_UTF8_VALUE)
     public ResponseEntity<Question> startProcess(@RequestBody Map<String, String> product) {
         Process process = new Process();
-
-        Question q1 = stepUtils.getFirstQuestion(product.get("productCode"));
+        process.setDateStart(new Date());
+        process.setProductName(product.get("productName"));
+        processRepository.save(process);
+        Question q1 = stepUtils.getFirstQuestion(product.get("productCode"), process);
         return new ResponseEntity<>(q1, HttpStatus.OK);
+        //возвращать вместо Question массив из process и question или сразу step с process id
+    }
+
+    @RequestMapping(value="/my_processes", method = RequestMethod.GET)
+    public ModelAndView getMyTestsPage() {
+        ModelAndView modelAndView = new ModelAndView("my_processes");
+        List<Process> processList = processRepository.findAll();
+        modelAndView.addObject("processList", processList);
+        return modelAndView;
     }
 }
Index: src/main/java/com/egartech/sppi/web/StepController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/egartech/sppi/web/StepController.java	(date 1536140631000)
+++ src/main/java/com/egartech/sppi/web/StepController.java	(date 1536674805000)
@@ -2,6 +2,7 @@
 
 import com.egartech.sppi.configuration.StepUtils;
 import com.egartech.sppi.model.Question;
+import com.egartech.sppi.repo.ProcessRepository;
 import com.egartech.sppi.repo.QuestionRepository;
 import com.fasterxml.jackson.core.type.TypeReference;
 import com.fasterxml.jackson.databind.ObjectMapper;
@@ -30,6 +31,9 @@
     @Autowired
     StepUtils stepUtils;
 
+    @Autowired
+    ProcessRepository processRepository;
+
     private static final String STANDARD_ANSWERS = "{\"yes\":\"Да\",\"no\":\"Нет\"}";
     
     @RequestMapping(value="process/{id}", method=RequestMethod.GET)
@@ -58,8 +62,9 @@
     }
     
     @RequestMapping(value="getnext/{id}", method=RequestMethod.POST)
-    public ResponseEntity<Question> getNextQuestion(@PathVariable(value="id") Long id,@RequestBody String answer) {
-         Question q1 = stepUtils.getNextQuestion(questionRepository.findById(id).get(),answer);
+    public ResponseEntity<Question> getNextQuestion(@PathVariable(value="id") Long id, @RequestBody String answer) {
+//        Process process = processRepository.f
+        Question q1 = stepUtils.getNextQuestion(questionRepository.findById(id).get(), answer);
         if (q1.getCode().equals("SUCCESS") || q1.getCode().equals("FAIL")) {
             return new ResponseEntity<>(q1, HttpStatus.OK);
         }
Index: src/main/resources/db/changelog/07_add_process_step.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/db/changelog/07_add_process_step.xml	(date 1536681801000)
+++ src/main/resources/db/changelog/07_add_process_step.xml	(date 1536681801000)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<databaseChangeLog
+        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
+        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">
+    <changeSet id="007" author="a.fedorenko">
+        <createTable tableName="process_step" remarks="Шаг процесса выполнения теста">
+            <column name="id" type="bigint">
+                <constraints nullable="false"/>
+            </column>
+            <column name="process_id" type="bigint">
+                <constraints foreignKeyName="process_id_fk" references="process(id)"/>
+            </column>
+            <column name="answer" type="varchar(25)">
+                <constraints nullable="false"/>
+            </column>
+            <column name="question_id" type="bigint">
+                <constraints nullable="false" foreignKeyName="question_id_fk" references="question(id)"/>
+            </column>
+            <column name="step_number" type="int">
+                <constraints nullable="false"/>
+            </column>
+        </createTable>
+        <addPrimaryKey columnNames="id" constraintName="process_step_pk" tableName="process_step"/>
+        <!--<addForeignKeyConstraint baseTableName="process" baseColumnNames="id" constraintName="process_id_fk"
+                                 referencedTableName="process_step"
+                                 referencedColumnNames="process_id"/>-->
+        <!--<addForeignKeyConstraint baseTableName="question" baseColumnNames="question_id" constraintName="question_id_fk"
+                                 referencedTableName="process_step"
+                                 referencedColumnNames="question_id"/>-->
+        <createSequence sequenceName="process_step_sequence" startValue="1" incrementBy="1"/>
+    </changeSet>
+</databaseChangeLog>
\ No newline at end of file
Index: src/main/resources/db/changelog/08_add_dateStart_and_productName_column_to_process.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/db/changelog/08_add_dateStart_and_productName_column_to_process.xml	(date 1536668956000)
+++ src/main/resources/db/changelog/08_add_dateStart_and_productName_column_to_process.xml	(date 1536668956000)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<databaseChangeLog
+        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
+        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">
+    <changeSet id="008" author="a.fedorenko">
+        <addColumn tableName="process">
+            <column name="date_start"  type="datetime" remarks="Дата начала прохождения теста"/>
+        </addColumn>
+        <addColumn tableName="process">
+            <column name="product_name"  type="varchar(60)" remarks="Имя продукта, к которому относится тест"/>
+        </addColumn>
+    </changeSet>
+</databaseChangeLog>
\ No newline at end of file
Index: src/main/resources/db/db.changelog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/db/db.changelog.xml	(date 1536140631000)
+++ src/main/resources/db/db.changelog.xml	(date 1536679704000)
@@ -9,4 +9,6 @@
         <include file="db/changelog/04_loadquestions_for_real_test.xml" relativeToChangelogFile="false"/>
         <include file="db/changelog/05_question_add_answer_column.xml" relativeToChangelogFile="false"/>
         <include file="db/changelog/06_loadquestions_for_real_test2.xml" relativeToChangelogFile="false"/>
+        <include file="db/changelog/07_add_process_step.xml" relativeToChangelogFile="false"/>
+        <include file="db/changelog/08_add_dateStart_and_productName_column_to_process.xml" relativeToChangelogFile="false"/>
 </databaseChangeLog>
\ No newline at end of file
Index: src/main/resources/static/js/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/static/js/index.js	(date 1536140631000)
+++ src/main/resources/static/js/index.js	(date 1536681801000)
@@ -1,7 +1,8 @@
 $("#start_button").click(function (e) {
     e.preventDefault();
     var product = {
-        productCode: $("#product_type option:selected").val()
+        productCode: $("#product_type option:selected").val(),
+        productName: $("#product_type option:selected").text()
     };
     $.ajax({
         type: "POST",
@@ -16,3 +17,7 @@
         }
     });
 });
+
+$("#process_button").click(function (e) {
+    window.location = "../my_processes";
+});
\ No newline at end of file
Index: src/main/resources/static/js/my_processes.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/static/js/my_processes.js	(date 1536666246000)
+++ src/main/resources/static/js/my_processes.js	(date 1536666246000)
@@ -0,0 +1,35 @@
+$(document).ready(function () {
+    $.ajax({
+        type: "GET",
+        url: '../question/'+questionid,
+        contentType: "application/json; charset=utf-8",
+        success: function (response) {
+            showAlert("Задача запущена");
+            $("#question").append(response.content);
+        },
+        error: function (error) {
+            showAlert("Задача не запущена: " + error)
+        }
+    });
+});
+
+$(".answerBtn").on("click",function() {
+    console.log($(this).data("tag"));
+    $.ajax({
+        type: "POST",
+        url: '../getnext/'+questionid,
+        contentType: "application/json; charset=utf-8",
+        data: $(this).data("tag"),
+        success: function (response) {
+            console.log(response);
+            if (response.code === "SUCCESS" || response.code === "FAIL") {
+                window.location = "../showresult/" + response.code.toLowerCase();
+            } else {
+                window.location = "../showquestion/"+response.id;
+            }
+        },
+        error: function (error) {
+            showAlert("Не найдено продолжение опроса...")
+        }
+    });
+});
\ No newline at end of file
Index: src/main/resources/templates/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/templates/index.html	(date 1536140631000)
+++ src/main/resources/templates/index.html	(date 1536672412000)
@@ -2,7 +2,7 @@
 <html xmlns="http://www.w3.org/1999/xhtml"
       xmlns:th="http://www.thymeleaf.org">
 <head>
-    <title>SPPI-test</title>
+    <title>SPPI-тест</title>
     <link rel="stylesheet"
           href="/webjars/bootstrap/4.1.3/css/bootstrap.min.css"/>
     <script src="/webjars/jquery/3.3.1-1/jquery.min.js"></script>
@@ -27,6 +27,14 @@
         </div>
         <div class="col-sm-1">
             <button id="start_button" class="btn btn-primary">Старт</button>
+        </div>
+    </div>
+    <div class="row">
+        <div class="col-sm-3">
+            <h4>Перейти в "Мои процессы"</h4>
+        </div>
+        <div class="col-sm-1">
+            <button id="process_button" class="btn btn-primary">Процессы</button>
         </div>
     </div>
 </div>
Index: src/main/resources/templates/my_processes.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/templates/my_processes.html	(date 1536672412000)
+++ src/main/resources/templates/my_processes.html	(date 1536672412000)
@@ -0,0 +1,54 @@
+<!DOCTYPE "http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-4.dtd">
+<html xmlns="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.thymeleaf.org">
+<head>
+    <title>Мои тесты</title>
+    <link rel="stylesheet"
+          href="/webjars/bootstrap/4.1.3/css/bootstrap.min.css"/>
+    <script src="/webjars/jquery/3.3.1-1/jquery.min.js"></script>
+    <script src="/webjars/bootstrap/4.1.3/js/bootstrap.min.js"></script>
+    <script th:src="@{/js/common.js}"></script>
+</head>
+<body>
+<p/>
+<script th:inline="javascript">
+    /*<![CDATA[*/
+    var processList = [[${processList}]];
+    /*]]>*/
+</script>
+<!--<div class="container">-->
+    <table class="table">
+        <thead>
+            <tr>
+                <th scope="col">Дата начала</th>
+                <th scope="col">Последний вопрос</th>
+                <th scope="col">Продукт</th>
+                <th scope="col">Действие</th>
+            </tr>
+        </thead>
+        <tbody>
+            <tr th:each="process : ${processList}">
+                <td th:text="${process.getDateStart()}"></td>
+                <td th:text="${process.getLastQuestion().getCode()}"></td><!--нужно выводить сокращ. содерж. вопроса-->
+                <td th:text="${process.getProductName()}"></td>
+                <td>
+                    <div class="btn-success">Продолжить</div>
+                </td>
+            </tr>
+        </tbody>
+    </table>
+
+    <p/>
+    <div class="row">
+        <div class="col-sm-3">
+            <h4>Вернуться и выбрать новый тест</h4>
+        </div>
+        <div class="col-sm-1">
+            <button id="start_button" class="btn btn-primary">Назад</button>
+        </div>
+    </div>
+<!--</div>-->
+
+<script th:src="@{/js/my_processes.js}"></script>
+</body>
+</html>
\ No newline at end of file

DECLARE
  execSql varchar2(8096);
  i INTEGER;
BEGIN
  DBMS_OUTPUT.enable();
  SELECT count(*) into i FROM all_indexes WHERE index_name='IDX_PROCESS_PAUSED_QUESTION';
  if (i = 0) THEN
    BEGIN
      execSql :=
      'CREATE INDEX SPPI_TEST.IDX_SPPI_PROCESS_PAUSED_QUESTION on SPPI_TEST.SPPI_PROCESS (PAUSED_QUESTION_ID) TABLESPACE UFS_TS_TX_DATA online';
      EXECUTE IMMEDIATE execSql;
    EXCEPTION
      WHEN OTHERS THEN RAISE_APPLICATION_ERROR(-20004,'Error CREATING index');
    END;

  ELSE
    DBMS_OUTPUT.PUT_LINE('WARN index IDX_SPPI_PROCESS_PAUSED_QUESTION already exists!');
  END if;


  SELECT count(*) INTO i FROM all_indexes WHERE index_name='IDX_PROCESS_STEP_PROCESS';
  if (i = 0) THEN
    BEGIN
      execSql :=
      'CREATE INDEX SPPI_TEST.IDX_SPPI_PROCESS_STEP_PROCESS on SPPI_TEST.SPPI_PROCESS_STEP (PROCESS_ID) TABLESPACE UFS_TS_TX_DATA online';
      EXECUTE IMMEDIATE execSql;
    EXCEPTION
      WHEN OTHERS THEN RAISE_APPLICATION_ERROR(-20004,'Error CREATING index');
    END;

  ELSE
    DBMS_OUTPUT.PUT_LINE('WARN index IDX_SPPI_PROCESS_STEP_PROCESS already exists!');
  END if;


  SELECT count(*) INTO i FROM all_indexes WHERE index_name='IDX_PROCESS_STEP_QUESTION';
  if (i = 0) THEN
    BEGIN
      execSql :=
      'CREATE INDEX SPPI_TEST.IDX_SPPI_PROCESS_STEP_QUESTION on SPPI_TEST.SPPI_PROCESS_STEP (QUESTION_ID) TABLESPACE UFS_TS_TX_DATA online';
      EXECUTE IMMEDIATE execSql;
    EXCEPTION
      WHEN OTHERS THEN RAISE_APPLICATION_ERROR(-20004,'Error CREATING index');
    END;

  ELSE
    DBMS_OUTPUT.PUT_LINE('WARN index IDX_SPPI_PROCESS_STEP_QUESTION already exists!');
  END if;

END;
/
import com.egartech.sppi.model.Step;
import com.egartech.sppi.model.Product;

rule "define first question of CB test"
    when
        product:Product(productCode=="central_bank");
    then
        product.setFirstQuestionCode("CB1");
        update(product);
end

rule "Step CB1 - YES"
    when
        step:Step(current.code=="CB1"&&answer=="yes");
    then
        step.setNextQ("CB2");
        update(step);
end
rule "Step CB1 - NO"
    when
        step:Step(current.code=="CB1"&&answer=="no");
    then
        step.setNextQ("CB6");
        update(step);end

rule "Step CB2 - YES-Only CLI"
    when
        step:Step(current.code=="CB2"&&answer=="yes_only_cli");
    then
        step.setNextQ("CB3.1.2");
        update(step);end
rule "Step CB2 - NO-not only CLI"
    when
        step:Step(current.code=="CB2"&&answer=="no_not_only_cli");
    then
        step.setNextQ("CB3.1.1");
        update(step);end
rule "Step CB2 - NO"
     when
         step:Step(current.code=="CB2"&&answer=="no_not_cli");
     then
         step.setNextQ("CB4");
         update(step);end
rule "Step CB3.1.2 - YES"
     when
         step:Step(current.code=="CB3.1.2"&&answer=="yes");
     then
        step.setTestFailed();
        update(step);end
rule "Step CB3.1.2 - NO"
     when
         step:Step(current.code=="CB3.1.2"&&answer=="no");
     then
         step.setNextQ("CB3.2.2");
         update(step);end
rule "Step CB3.2.2 - YES"
     when
         step:Step(current.code=="CB3.2.2"&&answer=="yes");
     then
         step.setNextQ("CB3.3.2");
         update(step);end
rule "Step CB3.2.2 - NO"
     when
         step:Step(current.code=="CB3.2.2"&&answer=="no");
     then
         step.setTestFailed();
         update(step);end
rule "Step CB3.3.2 - YES"
     when
         step:Step(current.code=="CB3.3.2"&&answer=="yes");
     then
         step.setNextQ("CB3.4.2");
         update(step);end
rule "Step CB3.3.2 - NO"
     when
         step:Step(current.code=="CB3.3.2"&&answer=="no");
     then
         step.setTestFailed();
         update(step);end
rule "Step CB3.4.2 - YES"
     when
         step:Step(current.code=="CB3.4.2"&&answer=="yes");
     then
         step.setTestFailed();
         update(step);end
rule "Step CB3.4.2 - NO"
     when
         step:Step(current.code=="CB3.4.2"&&answer=="no");
     then
         step.setNextQ("CB3.5.2");
         update(step);end

rule "Step CB3.5.2 - YES"
     when
         step:Step(current.code=="CB3.5.2"&&answer=="yes");
     then
        step.setNextQ("CB6");
        update(step);end
rule "Step CB3.5.2 - NO"
     when
         step:Step(current.code=="CB3.5.2"&&answer=="no");
     then
         step.setNextQ("CB3.6.2");
         update(step);end

 rule "Step CB3.6.2 - YES"
      when
          step:Step(current.code=="CB3.6.2"&&answer=="yes");
      then
         step.setNextQ("CB6");
         update(step);end
 rule "Step CB3.6.2 - NO"
      when
          step:Step(current.code=="CB3.6.2"&&answer=="no");
      then
         step.setTestFailed();
         update(step);end

rule "Step CB3.1.1 - YES"
     when
         step:Step(current.code=="CB3.1.1"&&answer=="yes");
     then
        step.setTestFailed();
        update(step);end
rule "Step CB3.1.1 - NO"
     when
         step:Step(current.code=="CB3.1.1"&&answer=="no");
     then
         step.setNextQ("CB3.2.1");
         update(step);end
rule "Step CB3.2.1 - YES"
     when
         step:Step(current.code=="CB3.2.1"&&answer=="yes");
     then
         step.setNextQ("CB3.3.1");
         update(step);end
rule "Step CB3.2.1 - NO"
     when
         step:Step(current.code=="CB3.2.1"&&answer=="no");
     then
         step.setTestFailed();
         update(step);end
rule "Step CB3.3.1 - YES"
     when
         step:Step(current.code=="CB3.3.1"&&answer=="yes");
     then
         step.setNextQ("CB3.4.1");
         update(step);end
rule "Step CB3.3.1 - NO"
     when
         step:Step(current.code=="CB3.3.1"&&answer=="no");
     then
         step.setTestFailed();
         update(step);end
rule "Step CB3.4.1 - YES"
     when
         step:Step(current.code=="CB3.4.1"&&answer=="yes");
     then
         step.setTestFailed();
         update(step);end
rule "Step CB3.4.1 - NO"
     when
         step:Step(current.code=="CB3.4.1"&&answer=="no");
     then
         step.setNextQ("CB3.5.1");
         update(step);end

rule "Step CB3.5.1 - YES"
     when
         step:Step(current.code=="CB3.5.1"&&answer=="yes");
     then
        step.setNextQ("CB4");
        update(step);end
rule "Step CB3.5.1 - NO"
     when
         step:Step(current.code=="CB3.5.1"&&answer=="no");
     then
         step.setNextQ("CB3.6.1");
         update(step);end

rule "Step CB3.6.1 - YES"
      when
          step:Step(current.code=="CB3.6.1"&&answer=="yes");
      then
         step.setNextQ("CB4");
         update(step);end
rule "Step CB3.6.1 - NO"
      when
          step:Step(current.code=="CB3.6.1"&&answer=="no");
      then
         step.setTestFailed();
         update(step);end

rule "Step CB4 - YES"
      when
           step:Step(current.code=="CB4"&&answer=="yes");
      then
           step.setNextQ("CB6");
           update(step);end
rule "Step CB4 - NO"
      when
            step:Step(current.code=="CB4"&&answer=="no");
      then
           step.setNextQ("CB5");
           update(step);end

rule "Step CB5 - YES"
      when
           step:Step(current.code=="CB5"&&answer=="yes");
      then
           step.setNextQ("CB6");
           update(step);end
rule "Step CB5 - NO"
        when
            step:Step(current.code=="CB5"&&answer=="no");
        then
             step.setTestFailed();
             update(step);end

rule "Step CB6 - FIXED"
      when
           step:Step(current.code=="CB6"&&answer=="fixed");
      then
           step.setNextQ("CB8.1");
           update(step);end
rule "Step CB6 - FLOAT"
      when
            step:Step(current.code=="CB6"&&answer=="floating");
      then
           step.setNextQ("CB7.1");
           update(step);end

rule "Step CB7.1 - YES"
      when
           step:Step(current.code=="CB7.1"&&answer=="yes");
      then
           step.setNextQ("CB7.2");
           update(step);end
rule "Step CB7.1 - NO"
      when
            step:Step(current.code=="CB7.1"&&answer=="no");
      then
             step.setTestFailed();
             update(step);end

rule "Step CB7.2 - YES"
      when
           step:Step(current.code=="CB7.2"&&answer=="yes");
      then
             step.setTestFailed();
             update(step);end
rule "Step CB7.2 - NO"
      when
            step:Step(current.code=="CB7.2"&&answer=="no");
      then
           step.setNextQ("CB7.3");
           update(step);end
rule "Step CB7.3 - YES"
      when
           step:Step(current.code=="CB7.3"&&answer=="yes");
      then
             step.setTestFailed();
             update(step);end
rule "Step CB7.3 - NO"
      when
            step:Step(current.code=="CB7.3"&&answer=="no");
      then
           step.setNextQ("CB7.4");
           update(step);end

rule "Step CB7.4 - YES"
      when
           step:Step(current.code=="CB7.4"&&answer=="yes");
      then
           step.setNextQ("CB7.5");
           update(step);end
rule "Step CB7.4 - NO"
      when
            step:Step(current.code=="CB7.4"&&answer=="no");
      then
             step.setNextQ("CB7.7.1");
             update(step);end
rule "Step CB7.5 - YES"
      when
           step:Step(current.code=="CB7.5"&&answer=="yes");
      then
           step.setNextQ("CB7.6");
           update(step);end
rule "Step CB7.5 - NO"
      when
            step:Step(current.code=="CB7.5"&&answer=="no");
      then
           step.setNextQ("CB7.7.1");
           update(step);end
rule "Step CB7.6 - YES"
      when
           step:Step(current.code=="CB7.6"&&answer=="yes");
      then
           step.setNextQ("CB7.7.1");
           update(step);end
rule "Step CB7.6 - NO"
      when
            step:Step(current.code=="CB7.6"&&answer=="no");
      then
           step.setNextQ("CB8.1");
           update(step);end

rule "Step CB7.7.1 - YES"
      when
           step:Step(current.code=="CB7.7.1"&&answer=="yes");
      then
           step.setNextQ("CB8.1");
           update(step);end
rule "Step CB7.7.1 - NO"
      when
            step:Step(current.code=="CB7.7.1"&&answer=="no");
      then
           step.setNextQ("CB7.7.2");
           update(step);end

rule "Step CB7.7.2 - YES"
      when
           step:Step(current.code=="CB7.7.1"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);end
rule "Step CB7.7.2 - NO"
      when
            step:Step(current.code=="CB7.7.2"&&answer=="no");
      then
           step.setNextQ("CB8.1");
           update(step);end

rule "Step CB8.1 - YES"
      when
           step:Step(current.code=="CB8.1"&&answer=="yes");
      then
           step.setNextQ("CB8.2.2");
           update(step);end
rule "Step CB8.1 - NO(with_condition)"
      when
            step:Step(current.code=="CB8.1"&&answer=="no_with_condition");
      then
           step.setNextQ("CB8.2.1");
           update(step);end
rule "Step CB8.1 - NO (with step)"
      when
           step:Step(current.code=="CB8.1"&&answer=="no_with_step");
      then
           step.setNextQ("CB9.1");
           update(step);end
rule "Step CB8.1 - NO(not_condition)"
      when
            step:Step(current.code=="CB8.1"&&answer=="no_not_condition");
      then
           step.setNextQ("CB10");
           update(step);end

rule "Step CB8.2.1 - YES"
      when
            step:Step(current.code=="CB8.2.1"&&answer=="yes");
      then
           step.setNextQ("CB9.1");
           update(step);end

rule "Step CB8.2.1 - NO"
      when
            step:Step(current.code=="CB8.2.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end
rule "Step CB8.2.2 - YES"
      when
            step:Step(current.code=="CB8.2.2"&&answer=="yes");
      then
           step.setNextQ("CB10");
           update(step);end

rule "Step CB8.2.2 - NO"
      when
            step:Step(current.code=="CB8.2.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end

rule "Step CB9.1 - YES"
      when
            step:Step(current.code=="CB9.1"&&answer=="yes");
      then
           step.setNextQ("CB9.2");
           update(step);end
rule "Step CB9.1 - NO"
      when
            step:Step(current.code=="CB9.1"&&answer=="no");
      then
           step.setNextQ("CB9.2");
           update(step);end
rule "Step CB9.2 - YES"
      when
            step:Step(current.code=="CB9.2"&&answer=="yes");
      then
           step.setNextQ("CB9.3");
           update(step);end
rule "Step CB9.2 - NO"
      when
            step:Step(current.code=="CB9.2"&&answer=="no");
      then
           step.setNextQ("CB9.3");
           update(step);end

rule "Step CB9.3 - YES"
      when
            step:Step(current.code=="CB9.3"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);end
rule "Step CB9.3 - NO"
      when
            step:Step(current.code=="CB9.3"&&answer=="no");
      then
           step.setNextQ("CB9.4");
           update(step);end

rule "Step CB9.4 - YES"
      when
            step:Step(current.code=="CB9.4"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CB9.4 - NO"
      when
            step:Step(current.code=="CB9.4"&&answer=="no");
      then
           step.setNextQ("CB9.5");
           update(step);end

rule "Step CB9.5 - YES"
      when
            step:Step(current.code=="CB9.5"&&answer=="yes");
      then
           step.setNextQ("CB9.5.1");
           update(step);end
rule "Step CB9.5 - NO"
      when
            step:Step(current.code=="CB9.5"&&answer=="no");
      then
           step.setNextQ("CB10");
           update(step);end

rule "Step CB9.5.1 - YES"
      when
            step:Step(current.code=="CB9.5.1"&&answer=="yes");
      then
           step.setNextQ("CB10");
           update(step);end
rule "Step CB9.5.1 - NO"
      when
            step:Step(current.code=="CB9.5.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end


rule "Step CB10 - YES"
      when
            step:Step(current.code=="CB10"&&answer=="yes");
      then
           step.setNextQ("CB11");
           update(step);end
rule "Step CB10 - NO"
      when
            step:Step(current.code=="CB10"&&answer=="no");
      then
           step.setNextQ("CB15");
           update(step);end

rule "Step CB11 - YES"
      when
            step:Step(current.code=="CB11"&&answer=="yes");
      then
           step.setNextQ("CB14.1");
           update(step);end
rule "Step CB11 - NO"
      when
            step:Step(current.code=="CB11"&&answer=="no");
      then
           step.setNextQ("CB12");
           update(step);end

rule "Step CB12 - YES"
      when
            step:Step(current.code=="CB12"&&answer=="yes");
      then
           step.setNextQ("CB15");
           update(step);end
rule "Step CB12 - NO"
      when
            step:Step(current.code=="CB12"&&answer=="no");
      then
           step.setNextQ("CB13.1");
           update(step);end

rule "Step CB13.1 - YES"
      when
            step:Step(current.code=="CB13.1"&&answer=="yes");
      then
           step.setNextQ("CB13.2");
           update(step);end
rule "Step CB13.1 - NO"
      when
            step:Step(current.code=="CB13.1"&&answer=="no");
      then
           step.setNextQ("CB13.2");
           update(step);end

rule "Step CB13.2 - YES"
      when
            step:Step(current.code=="CB13.2"&&answer=="yes");
      then
           step.setNextQ("CB13.3");
           update(step);end
rule "Step CB13.2 - NO"
      when
            step:Step(current.code=="CB13.2"&&answer=="no");
      then
           step.setNextQ("CB13.3");
           update(step);end

rule "Step CB13.3 - YES"
      when
            step:Step(current.code=="CB13.3"&&answer=="yes");
      then
           step.setNextQ("CB13.4");
           update(step);end
rule "Step CB13.3 - NO"
      when
            step:Step(current.code=="CB13.3"&&answer=="no");
      then
           step.setNextQ("CB13.4");
           update(step);end

rule "Step CB13.4 - YES"
      when
            step:Step(current.code=="CB13.4"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CB13.4 - NO"
      when
            step:Step(current.code=="CB13.4"&&answer=="no");
      then
           step.setNextQ("CB13.5");
           update(step);end
rule "Step CB13.5 - YES"
      when
            step:Step(current.code=="CB13.5"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CB13.5 - NO"
      when
            step:Step(current.code=="CB13.5"&&answer=="no");
      then
           step.setNextQ("CB13.6");
           update(step);end
rule "Step CB13.6 - YES"
      when
            step:Step(current.code=="CB13.6"&&answer=="yes");
      then
           step.setNextQ("CB13.6.1");
           update(step);end
rule "Step CB13.6 - NO"
      when
            step:Step(current.code=="CB13.6"&&answer=="no");
      then
           step.setNextQ("CB15");
           update(step);end
rule "Step CB13.6.1 - YES"
      when
            step:Step(current.code=="CB13.6.1"&&answer=="yes");
      then
           step.setNextQ("CB15");
           update(step);end
rule "Step CB13.6.1 - NO"
      when
            step:Step(current.code=="CB13.6.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end

rule "Step CB14.1 - YES"
      when
            step:Step(current.code=="CB14.1"&&answer=="yes");
      then
           step.setNextQ("CB14.2");
           update(step);end
rule "Step CB14.1 - NO"
      when
            step:Step(current.code=="CB14.1"&&answer=="no");
      then
           step.setNextQ("CB12");
           update(step);end

rule "Step CB14.2 - YES"
      when
            step:Step(current.code=="CB14.2"&&answer=="yes");
      then
           step.setNextQ("CB12");
           update(step);end
rule "Step CB14.2 - NO"
      when
            step:Step(current.code=="CB14.2"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end

rule "Step CB15 - YES"
      when
            step:Step(current.code=="CB15"&&answer=="yes");
      then
           step.setNextQ("CB16");
           update(step);end
rule "Step CB15 - NO"
      when
            step:Step(current.code=="CB15"&&answer=="no");
      then
           step.setNextQ("CB24");
           update(step);end

rule "Step CB16 - YES"
      when
            step:Step(current.code=="CB16"&&answer=="yes");
      then
           step.setNextQ("CB24");
           update(step);end
rule "Step CB16 - NO"
      when
            step:Step(current.code=="CB16"&&answer=="no");
      then
           step.setNextQ("CB17");
           update(step);end

rule "Step CB17 - YES"
      when
            step:Step(current.code=="CB17"&&answer=="yes");
      then
           step.setNextQ("CB24");
           update(step);end
rule "Step CB17 - NO"
      when
            step:Step(current.code=="CB17"&&answer=="no");
      then
           step.setNextQ("CB18");
           update(step);end


rule "Step CB18 - FIXED"
      when
           step:Step(current.code=="CB18"&&answer=="fixed");
      then
           step.setNextQ("CB20.1");
           update(step);end
rule "Step CB18.6 - FLOAT"
      when
            step:Step(current.code=="CB18"&&answer=="floating");
      then
           step.setNextQ("CB19.1");
           update(step);end

rule "Step CB19.1 - YES"
      when
           step:Step(current.code=="CB19.1"&&answer=="yes");
      then
           step.setNextQ("CB19.2");
           update(step);end
rule "Step CB19.1 - NO"
      when
            step:Step(current.code=="CB18.7.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end
rule "Step CB19.2 - YES"
      when
           step:Step(current.code=="CB19.2"&&answer=="yes");
      then
             step.setTestFailed();
             update(step);end
rule "Step CB19.2 - NO"
      when
            step:Step(current.code=="CB19.2"&&answer=="no");
      then
           step.setNextQ("CB19.3");
           update(step);end
rule "Step CB19.3 - YES"
      when
           step:Step(current.code=="CB19.3"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);end
rule "Step CB19.3 - NO"
      when
            step:Step(current.code=="CB19.3"&&answer=="no");
      then
           step.setNextQ("CB19.4");
           update(step);end

rule "Step CB19.4 - YES"
      when
           step:Step(current.code=="CB19.4"&&answer=="yes");
      then
           step.setNextQ("CB19.5");
           update(step);end
rule "Step CB19.4 - NO"
      when
            step:Step(current.code=="CB19.4"&&answer=="no");
      then
             step.setNextQ("CB19.7.1");
             update(step);end
rule "Step CB19.5 - YES"
      when
           step:Step(current.code=="CB19.5"&&answer=="yes");
      then
           step.setNextQ("CB19.6");
           update(step);end
rule "Step CB19.5 - NO"
      when
            step:Step(current.code=="CB19.5"&&answer=="no");
      then
           step.setNextQ("CB19.7.1");
           update(step);end
rule "Step CB19.6 - YES"
      when
           step:Step(current.code=="CB19.6"&&answer=="yes");
      then
           step.setNextQ("CB19.7.1");
           update(step);end
rule "Step CB19.6 - NO"
      when
            step:Step(current.code=="CB19.6"&&answer=="no");
      then
           step.setNextQ("CB20.1");
           update(step);end

rule "Step CB19.7.1 - YES"
      when
           step:Step(current.code=="CB19.7.1"&&answer=="yes");
      then
           step.setNextQ("CB20.1");
           update(step);end
rule "Step CB19.7.1 - NO"
      when
            step:Step(current.code=="CB19.7.1"&&answer=="no");
      then
           step.setNextQ("CB19.7.2");
           update(step);end

rule "Step CB19.7.2 - YES"
      when
           step:Step(current.code=="CB19.7.2"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);end
rule "Step CB19.7.2 - NO"
      when
            step:Step(current.code=="CB19.7.2"&&answer=="no");
      then
           step.setNextQ("CB20.1");
           update(step);end

rule "Step CB20.1 - YES"
      when
           step:Step(current.code=="CB20.1"&&answer=="yes");
      then
           step.setNextQ("CB20.2.2");
           update(step);end
rule "Step CB20.1 - NO(with_condition)"
      when
            step:Step(current.code=="CB20.1"&&answer=="no_with_condition");
      then
           step.setNextQ("CB20.2.1");
           update(step);end
rule "Step CB20.1 - NO (with step)"
      when
           step:Step(current.code=="CB20"&&answer=="no_with_step");
      then
           step.setNextQ("CB21.1");
           update(step);end
rule "Step CB20.1 - NO(not_condition)"
      when
            step:Step(current.code=="CB20.1"&&answer=="no_not_condition");
      then
           step.setNextQ("CB22");
           update(step);end

rule "Step CB20.2.1 - YES"
      when
            step:Step(current.code=="CB20.2.1"&&answer=="yes");
      then
           step.setNextQ("CB21.1");
           update(step);end

rule "Step CB20.2.1 - NO"
      when
            step:Step(current.code=="CB20.2.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end
rule "Step CB20.2.2 - YES"
      when
            step:Step(current.code=="CB20.2.2"&&answer=="yes");
      then
           step.setNextQ("CB22");
           update(step);end

rule "Step CB20.2.2 - NO"
      when
            step:Step(current.code=="CB20.2.2"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end

rule "Step CB21.1 - YES"
      when
            step:Step(current.code=="CB21.1"&&answer=="yes");
      then
           step.setNextQ("CB21.2");
           update(step);end
rule "Step CB21.1 - NO"
      when
            step:Step(current.code=="CB21.1"&&answer=="no");
      then
           step.setNextQ("CB21.2");
           update(step);end
rule "Step CB21.2 - YES"
      when
            step:Step(current.code=="CB21.2"&&answer=="yes");
      then
           step.setNextQ("CB21.3");
           update(step);end
rule "Step CB21.2 - NO"
      when
            step:Step(current.code=="CB21.2"&&answer=="no");
      then
           step.setNextQ("CB21.3");
           update(step);end

rule "Step CB21.3 - YES"
      when
            step:Step(current.code=="CB21.3"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);end
rule "Step CB21.3 - NO"
      when
            step:Step(current.code=="CB21.3"&&answer=="no");
      then
           step.setNextQ("CB21.4");
           update(step);end


rule "Step CB21.4 - YES"
      when
            step:Step(current.code=="CB21.4"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CB21.4 - NO"
      when
            step:Step(current.code=="CB21.4"&&answer=="no");
      then
           step.setNextQ("CB21.5");
           update(step);end

rule "Step CB21.5 - YES"
      when
            step:Step(current.code=="CB21.5"&&answer=="yes");
      then
            step.setNextQ("CB21.5.1");
            update(step);end
rule "Step CB21.5 - NO"
      when
            step:Step(current.code=="CB21.5"&&answer=="no");
      then
           step.setNextQ("CB22");
           update(step);end


rule "Step CB21.5.1 - YES"
      when
            step:Step(current.code=="CB21.5.1"&&answer=="yes");
      then
           step.setNextQ("CB22");
           update(step);end
rule "Step CB21.5.1 - NO"
      when
            step:Step(current.code=="CB21.5.1"&&answer=="no");
      then
            step.setTestFailed();
            update(step);end


rule "Step CB22 - YES"
      when
            step:Step(current.code=="CB22"&&answer=="yes");
      then
           step.setNextQ("CB23");
           update(step);end
rule "Step CB22 - NO"
      when
            step:Step(current.code=="CB22"&&answer=="no");
      then
           step.setNextQ("CB24");
           update(step);end

rule "Step CB23 - YES"
      when
            step:Step(current.code=="CB23"&&answer=="yes");
      then
           step.setNextQ("CB24");
           update(step);end
rule "Step CB23 - NO"
      when
            step:Step(current.code=="CB23"&&answer=="no");
      then
           step.setNextQ("CB23.1");
           update(step);end

rule "Step CB23.1 - YES"
      when
            step:Step(current.code=="CB23.1"&&answer=="yes");
      then
           step.setNextQ("CB23.2");
           update(step);end
rule "Step CB23.1 - NO"
      when
            step:Step(current.code=="CB23.1"&&answer=="no");
      then
           step.setNextQ("CB23.2");
           update(step);end
rule "Step CB23.2 - YES"
      when
            step:Step(current.code=="CB23.2"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CB23.2 - NO"
      when
            step:Step(current.code=="CB23.2"&&answer=="no");
      then
           step.setNextQ("CB23.3");
           update(step);end

rule "Step CB23.3 - YES"
      when
            step:Step(current.code=="CB23.3"&&answer=="yes");
      then
           step.setNextQ("CB23.3.1");
           update(step);end
rule "Step CB23.3 - NO"
      when
            step:Step(current.code=="CB23.3"&&answer=="no");
      then
           step.setNextQ("CB24");
           update(step);end

rule "Step CB23.3.1 - YES"
      when
            step:Step(current.code=="CB23.3.1"&&answer=="yes");
      then
           step.setNextQ("CB24");
           update(step);end
rule "Step CB23.3.1 - NO"
      when
            step:Step(current.code=="CB23.3.1"&&answer=="no");
      then
            step.setTestFailed();
            update(step);end

rule "Step CB24 - YES"
      when
            step:Step(current.code=="CB24"&&answer=="yes");
      then
           step.setNextQ("CB25");
           update(step);end
rule "Step CB24 - NO"
      when
            step:Step(current.code=="CB24"&&answer=="no");
      then
           step.setNextQ("CB27");
           update(step);end

rule "Step CB25 - YES"
      when
            step:Step(current.code=="CB25"&&answer=="yes");
      then
           step.setNextQ("CB25.1");
           update(step);end
rule "Step CB25 - NO"
      when
            step:Step(current.code=="CB25"&&answer=="no");
      then
           step.setNextQ("CB26");
           update(step);end
rule "Step CB25.1 - YES"
      when
            step:Step(current.code=="CB25.1"&&answer=="yes");
      then
           step.setNextQ("CB25.2");
           update(step);end
rule "Step CB25.1 - NO"
      when
            step:Step(current.code=="CB25.1"&&answer=="no");
      then
           step.setNextQ("CB33");
           update(step);end

rule "Step CB25.2 - YES"
      when
            step:Step(current.code=="CB25.2"&&answer=="yes");
      then
           step.setNextQ("CB33");
           update(step);end
rule "Step CB25.2 - NO"
      when
            step:Step(current.code=="CB25.2"&&answer=="no");
      then
           step.setNextQ("CB26");
           update(step);end

rule "Step CB26 - YES"
      when
            step:Step(current.code=="CB26"&&answer=="yes");
      then
           step.setNextQ("CB26.1");
           update(step);end
rule "Step CB26 - NO"
      when
            step:Step(current.code=="CB26"&&answer=="no");
      then
           step.setNextQ("CB31.3");
           update(step);end

rule "Step CB26.1 - YES"
      when
            step:Step(current.code=="CB26.1"&&answer=="yes");
      then
           step.setNextQ("CB33");
           update(step);end
rule "Step CB26.1 - NO"
      when
            step:Step(current.code=="CB26.1"&&answer=="no");
      then
           step.setNextQ("CB31.3");
           update(step);end

rule "Step CB27 - YES"
      when
            step:Step(current.code=="CB27"&&answer=="yes");
      then
           step.setNextQ("CB33");
           update(step);end
rule "Step CB27 - NO"
      when
            step:Step(current.code=="CB27"&&answer=="no");
      then
           step.setNextQ("CB28");
           update(step);end

rule "Step CB28 - YES"
      when
            step:Step(current.code=="CB28"&&answer=="yes");
      then
           step.setNextQ("CB29");
           update(step);end
rule "Step CB28 - NO"
      when
            step:Step(current.code=="CB28"&&answer=="no");
      then
           step.setNextQ("CB33");
            update(step);end
rule "Step CB29 - YES"
      when
            step:Step(current.code=="CB29"&&answer=="yes");
      then
           step.setNextQ("CB30");
           update(step);end
rule "Step CB29 - NO"
      when
            step:Step(current.code=="CB29"&&answer=="no");
      then
           step.setNextQ("CB31.1");
            update(step);end
 rule "Step CB30 - YES"
       when
             step:Step(current.code=="CB30"&&answer=="yes");
       then
            step.setNextQ("CB31.1");
            update(step);end
 rule "Step CB30 - NO"
       when
             step:Step(current.code=="CB30"&&answer=="no");
       then
            step.setNextQ("CB33");
            update(step);end

 rule "Step CB31.1 - YES"
       when
             step:Step(current.code=="CB31.1"&&answer=="yes");
       then
            step.setNextQ("CB31.2");
            update(step);end
 rule "Step CB31.1 - NO"
       when
             step:Step(current.code=="CB31.1"&&answer=="no");
       then
            step.setNextQ("CB31.3");
            update(step);end

 rule "Step CB31.2 - YES"
       when
             step:Step(current.code=="CB31.2"&&answer=="yes");
       then
            step.setNextQ("CB33");
            update(step);end
 rule "Step CB31.2 - NO"
       when
             step:Step(current.code=="CB31.2"&&answer=="no");
       then
            step.setNextQ("CB31.3");
            update(step);end

 rule "Step CB31.3 - YES"
       when
             step:Step(current.code=="CB31.3"&&answer=="yes");
       then
            step.setNextQ("CB33");
            update(step);end
 rule "Step CB31.3 - NO"
       when
             step:Step(current.code=="CB31.3"&&answer=="no");
       then
            step.setNextQ("CB32");
            update(step);end

 rule "Step CB32 - YES"
       when
             step:Step(current.code=="CB32"&&answer=="yes");
       then
            step.setNextQ("CB32.1");
            update(step);end
 rule "Step CB32 - NO"
       when
             step:Step(current.code=="CB32"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end


 rule "Step CB32.1 - YES"
       when
             step:Step(current.code=="CB32.1"&&answer=="yes");
       then
            step.setNextQ("CB33");
            update(step);end
 rule "Step CB32.1 - NO"
       when
             step:Step(current.code=="CB32.1"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end

 rule "Step CB33 - YES"
       when
             step:Step(current.code=="CB33"&&answer=="yes");
       then
            step.setNextQ("CB34");
            update(step);end
 rule "Step CB33 - NO"
       when
             step:Step(current.code=="CB33"&&answer=="no");
       then
            step.setNextQ("CB39");
            update(step);end
  rule "Step CB34 - YES"
        when
              step:Step(current.code=="CB34"&&answer=="yes");
        then
             step.setNextQ("CB42");
             update(step);end
  rule "Step CB34 - NO"
        when
              step:Step(current.code=="CB34"&&answer=="no");
        then
             step.setNextQ("CB35");
             update(step);end
 rule "Step CB35 - YES"
       when
             step:Step(current.code=="CB35"&&answer=="yes");
       then
            step.setNextQ("CB36");
            update(step);end
 rule "Step CB35 - NO"
       when
             step:Step(current.code=="CB35"&&answer=="no");
       then
            step.setNextQ("CB42");
            update(step);end

 rule "Step CB36 - YES"
       when
             step:Step(current.code=="CB36"&&answer=="yes");
       then
            step.setNextQ("CB39");
            update(step);end
 rule "Step CB36 - NO"
       when
             step:Step(current.code=="CB36"&&answer=="no");
       then
            step.setNextQ("CB37");
            update(step);end
 rule "Step CB37 - YES"
       when
             step:Step(current.code=="CB37"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
 rule "Step CB37 - NO"
       when
             step:Step(current.code=="CB37"&&answer=="no");
       then
            step.setNextQ("CB38.1");
            update(step);end
 rule "Step CB38.1 - YES"
       when
             step:Step(current.code=="CB38.1"&&answer=="yes");
       then
            step.setNextQ("CB38.2");
             update(step);end
 rule "Step CB38.1 - NO"
       when
             step:Step(current.code=="CB38.1"&&answer=="no");
       then
             step.setNextQ("CB38.2");
             update(step);end

 rule "Step CB38.2 - YES"
       when
             step:Step(current.code=="CB38.2"&&answer=="yes");
       then
             step.setNextQ("CB38.3");
             update(step);end

 rule "Step CB38.2 - NO"
       when
             step:Step(current.code=="CB38.2"&&answer=="no");
       then
             step.setNextQ("CB38.3");
             update(step);end

 rule "Step CB38.3 - YES"
       when
             step:Step(current.code=="CB38.3"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end

 rule "Step CB38.3 - NO"
       when
             step:Step(current.code=="CB38.3"&&answer=="no");
       then
            step.setNextQ("CB38.4");
            update(step);end
 rule "Step CB38.4 - YES"
       when
             step:Step(current.code=="CB38.4"&&answer=="yes");
       then
             step.setNextQ("CB38.4.1");
             update(step);end

 rule "Step CB38.4 - NO"
       when
             step:Step(current.code=="CB38.4"&&answer=="no");
       then
             step.setNextQ("CB39");
             update(step);end

 rule "Step CB38.4.1 - YES"
       when
             step:Step(current.code=="CB38.4.1"&&answer=="yes");
       then
            step.setNextQ("CB39");
            update(step);end
 rule "Step CB38.4.1 - NO"
       when
             step:Step(current.code=="CB38.4.1"&&answer=="no");
       then
             step.setTestFailed();
             update(step);end


 rule "Step CB39 - YES"
       when
             step:Step(current.code=="CB39"&&answer=="yes");
       then
            step.setNextQ("CB40");
            update(step);end
 rule "Step CB39 - NO"
       when
             step:Step(current.code=="CB39"&&answer=="no");
       then
             step.setNextQ("CB64");
             update(step);end


 rule "Step CB40 - YES"
       when
             step:Step(current.code=="CB40"&&answer=="yes");
       then
             step.setTestOK();
             update(step);end

 rule "Step CB40 - NO"
       when
             step:Step(current.code=="CB40"&&answer=="no");
       then
             step.setNextQ("CB41");
             update(step);end
rule "Step CB41 - YES"
       when
             step:Step(current.code=="CB40"&&answer=="yes");
       then
             step.setTestOK();
             update(step);end

rule "Step CB41 - NO"
       when
             step:Step(current.code=="CB41"&&answer=="no");
       then
             step.setNextQ("CB42");
             update(step);end

rule "Step CB42 - YES"
       when
             step:Step(current.code=="CB42"&&answer=="yes");
       then
             step.setNextQ("CB43");
            update(step);end
rule "Step CB42 - NO"
       when
             step:Step(current.code=="CB42"&&answer=="no");
       then
             step.setNextQ("CB49");
             update(step);end

rule "Step CB43 - YES"
       when
             step:Step(current.code=="CB43"&&answer=="yes");
       then
             step.setNextQ("CB45");
             update(step);end
 rule "Step CB43 - NO"
       when
             step:Step(current.code=="CB43"&&answer=="no");
       then
            step.setNextQ("CB44");
            update(step);end
rule "Step CB44 - YES"
       when
             step:Step(current.code=="CB44"&&answer=="yes");
       then
            step.setNextQ("CB49");
            update(step);end
 rule "Step CB44 - NO"
       when
             step:Step(current.code=="CB44"&&answer=="no");
       then
             step.setTestFailed();
             update(step);end

rule "Step CB45 - YES"
       when
             step:Step(current.code=="CB45"&&answer=="yes");
       then
             step.setNextQ("CB46");
             update(step);end
rule "Step CB45 - NO"
       when
             step:Step(current.code=="CB45"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end
rule "Step CB46 - YES"
         when
               step:Step(current.code=="CB46"&&answer=="yes");
         then
               step.setNextQ("CB47");
               update(step);end
rule "Step CB46 - NO"
         when
               step:Step(current.code=="CB46"&&answer=="no");
         then
            step.setTestFailed();
            update(step);end
rule "Step CB47 - YES"
         when
               step:Step(current.code=="CB47"&&answer=="yes");
         then
            step.setTestFailed();
            update(step);end
rule "Step CB47 - NO"
         when
               step:Step(current.code=="CB47"&&answer=="no");
         then
               step.setNextQ("CB48");
               update(step);end

rule "Step CB48 - YES"
         when
               step:Step(current.code=="CB48"&&answer=="yes");
         then
              step.setNextQ("CB49");
              update(step);end
rule "Step CB48 - NO"
         when
               step:Step(current.code=="CB48"&&answer=="no");
         then
              step.setTestFailed();
              update(step);end

rule "Step CB49 - YES"
         when
               step:Step(current.code=="CB49"&&answer=="yes");
         then
              step.setNextQ("CB49.1.1");
              update(step);end
rule "Step CB49 - NO (with_component)"
         when
               step:Step(current.code=="CB49"&&answer=="with_component");
         then
              step.setNextQ("CB49.1.2");
              update(step);end
rule "Step CB49 - NO(no_component)"
         when
               step:Step(current.code=="CB49"&&answer=="no_component");
         then
              step.setNextQ("CB54");
              update(step);end
rule "Step CB49 - NO"
         when
               step:Step(current.code=="CB49"&&answer=="no");
         then
              step.setTestOK();
              update(step);end

rule "Step CB49.1.1 - YES"
         when
               step:Step(current.code=="CB49.1.1"&&answer=="yes");
         then
              step.setTestOK();
              update(step);end

rule "Step CB49.1.1 - NO"
         when
               step:Step(current.code=="CB49.1.1"&&answer=="no");
         then
              step.setNextQ("CB50.1");
              update(step);end


rule "Step CB49.1.2 - YES"
         when
               step:Step(current.code=="CB49.1.2"&&answer=="yes");
         then
            step.setNextQ("CB54");
            update(step);end

rule "Step CB49.1.2 - NO"
         when
               step:Step(current.code=="CB49.1.2"&&answer=="no");
         then
            step.setNextQ("CB50.2");
            update(step);end


 rule "Step CB50.1 - FIXED"
       when
            step:Step(current.code=="CB50.1"&&answer=="fixed");
       then
            step.setNextQ("CB52.1.1");
            update(step);end


rule "Step CB50.1 - FLOAT"
       when
             step:Step(current.code=="CB50.1"&&answer=="floating");
       then
            step.setNextQ("CB51.1.1");
            update(step);end

rule "Step CB51.1.1 - YES"
       when
            step:Step(current.code=="CB51.1.1"&&answer=="yes");
       then
            step.setNextQ("CB51.2.1");
            update(step);end
rule "Step CB51.1.1 - NO"
       when
             step:Step(current.code=="CB51.1.1"&&answer=="no");
       then
              step.setTestFailed();
              update(step);end
rule "Step CB51.2.1 - YES"
       when
            step:Step(current.code=="CB51.2.1"&&answer=="yes");
       then
              step.setTestFailed();
               update(step);end
rule "Step CB51.2.1 - NO"
       when
             step:Step(current.code=="CB51.2.1"&&answer=="no");
       then
            step.setNextQ("CB51.3.1");
            update(step);end
rule "Step CB51.3.1 - YES"
       when
            step:Step(current.code=="CB51.3.1"&&answer=="yes");
       then
              step.setTestFailed();
               update(step);end
rule "Step CB51.3.1 - NO"
       when
             step:Step(current.code=="CB51.3.1"&&answer=="no");
       then
            step.setNextQ("CB51.4.1");
            update(step);end

rule "Step CB51.4.1 - YES"
       when
            step:Step(current.code=="CB51.4.1"&&answer=="yes");
       then
            step.setNextQ("CB51.5.1");
            update(step);end
rule "Step CB51.4.1 - NO"
       when
             step:Step(current.code=="CB51.4.1"&&answer=="no");
       then
              step.setNextQ("CB51.7.1.1");
              update(step);end
rule "Step CB51.5.1 - YES"
       when
            step:Step(current.code=="CB51.5.1"&&answer=="yes");
       then
            step.setNextQ("CB51.6.1");
            update(step);end
rule "Step CB51.5.1 - NO"
       when
             step:Step(current.code=="CB51.5.1"&&answer=="no");
       then
            step.setNextQ("CB51.7.1.1");
            update(step);end
rule "Step CB51.6.1 - YES"
       when
            step:Step(current.code=="CB51.6.1"&&answer=="yes");
       then
            step.setNextQ("CB51.7.1.1");
            update(step);end
rule "Step CB51.6.1 - NO"
       when
             step:Step(current.code=="CB51.6.1"&&answer=="no");
       then
            step.setNextQ("CB52.1.1");
            update(step);end

rule "Step CB51.7.1.1 - YES"
       when
            step:Step(current.code=="CB51.7.1.1"&&answer=="yes");
       then
            step.setNextQ("CB52.1.1");
            update(step);end
rule "Step CB51.7.1.1 - NO"
       when
             step:Step(current.code=="CB51.7.1.1"&&answer=="no");
       then
            step.setNextQ("CB51.7.2.1");
            update(step);end

rule "Step CB51.7.2.1 - YES"
       when
            step:Step(current.code=="CB51.7.2.1"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
rule "Step CB51.7.2.1 - NO"
       when
             step:Step(current.code=="CB51.7.2.1"&&answer=="no");
       then
            step.setNextQ("CB52.1.1");
            update(step);end

rule "Step CB52.1.1 - YES"
       when
            step:Step(current.code=="CB52.1.1"&&answer=="yes");
       then
            step.setNextQ("CB52.2.2.1");
            update(step);end
rule "Step CB52.1.1 - NO(with_condition)"
       when
             step:Step(current.code=="CB52.1.1"&&answer=="no_with_condition");
       then
            step.setNextQ("CB52.2.1.1");
            update(step);end
rule "Step CB52.1.1 - NO (with step)"
       when
            step:Step(current.code=="CB52.1.1"&&answer=="no_with_step");
       then
            step.setNextQ("CB53.3.1");
           update(step);end
rule "Step CB52.1.1 - NO(not condition)"
       when
             step:Step(current.code=="CB52.1.1"&&answer=="no_not_condition");
       then
            step.setTestOK();
            update(step);end

rule "Step CB52.2.1.1 - YES"
       when
             step:Step(current.code=="CB52.2.1.1"&&answer=="yes");
       then
            step.setNextQ("CB53.1.1");
            update(step);end

rule "Step CB52.2.1.1 - NO"
       when
             step:Step(current.code=="CB52.2.1.1"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end
rule "Step CB52.2.2.1 - YES"
       when
             step:Step(current.code=="CB52.2.2.1"&&answer=="yes");
       then
            step.setNextQ("CB54");
            update(step);end
rule "Step CB52.2.2.1 - NO"
       when
             step:Step(current.code=="CB52.2.2.1"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end

rule "Step CB53.1.1 - YES"
       when
             step:Step(current.code=="CB53.1.1"&&answer=="yes");
       then
            step.setNextQ("CB53.2.1");
            update(step);end
rule "Step CB53.1.1 - NO"
       when
             step:Step(current.code=="CB53.1.1"&&answer=="no");
       then
            step.setNextQ("CB53.2.1");
            update(step);end
rule "Step CB53.2.1 - YES"
       when
             step:Step(current.code=="CB53.2.1"&&answer=="yes");
       then
            step.setNextQ("CB53.3.1");
            update(step);end
 rule "Step CB53.2.1 - NO"
       when
             step:Step(current.code=="CB53.2.1"&&answer=="no");
       then
            step.setNextQ("CB53.3.1");
            update(step);end

 rule "Step CB53.3.1 - YES"
       when
             step:Step(current.code=="CB53.3.1"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
 rule "Step CB53.3.1 - NO"
       when
             step:Step(current.code=="CB53.3.1"&&answer=="no");
       then
            step.setNextQ("CB53.4.1");
            update(step);end

 rule "Step CB53.4.1 - YES"
       when
             step:Step(current.code=="CB53.4.1"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
 rule "Step CB53.4.1 - NO"
       when
             step:Step(current.code=="CB53.4.1"&&answer=="no");
       then
            step.setNextQ("CB53.5.1");
            update(step);end

rule "Step CB53.5.1 - YES"
       when
             step:Step(current.code=="CB53.5.1"&&answer=="yes");
       then
            step.setNextQ("CB53.5.1.1");
            update(step);end
rule "Step CB53.5.1 - NO"
       when
             step:Step(current.code=="CB53.5.1"&&answer=="no");
       then
            step.setNextQ("CB54");
            update(step);end

rule "Step CB53.5.1.1 - YES"
       when
             step:Step(current.code=="CB53.5.1.1"&&answer=="yes");
       then
            step.setNextQ("CB51");
            update(step);end
rule "Step CB53.5.1.1 - NO"
       when
             step:Step(current.code=="CB53.5.1.1"&&answer=="no");
       then
             step.setTestFailed();
             update(step);end

 rule "Step CB50.2 - FIXED"
       when
            step:Step(current.code=="CB50.2"&&answer=="fixed");
       then
            step.setNextQ("CB52.1.2");
            update(step);end


rule "Step CB50.2 - FLOAT"
       when
             step:Step(current.code=="CB50.2"&&answer=="floating");
       then
            step.setNextQ("CB51.1.2");
            update(step);end

rule "Step CB51.1.2 - YES"
       when
            step:Step(current.code=="CB51.1.2"&&answer=="yes");
       then
            step.setNextQ("CB51.2.2");
            update(step);end
rule "Step CB51.1.2 - NO"
       when
             step:Step(current.code=="CB51.1.2"&&answer=="no");
       then
              step.setTestFailed();
              update(step);end
rule "Step CB51.2.2 - YES"
       when
            step:Step(current.code=="CB51.2.2"&&answer=="yes");
       then
              step.setTestFailed();
               update(step);end
rule "Step CB51.2.2 - NO"
       when
             step:Step(current.code=="CB51.2.2"&&answer=="no");
       then
            step.setNextQ("CB51.3.2");
            update(step);end
rule "Step CB51.3.2 - YES"
       when
            step:Step(current.code=="CB51.3.2"&&answer=="yes");
       then
              step.setTestFailed();
               update(step);end
rule "Step CB51.3.2 - NO"
       when
             step:Step(current.code=="CB51.3.2"&&answer=="no");
       then
            step.setNextQ("CB51.4.2");
            update(step);end

rule "Step CB51.4.2 - YES"
       when
            step:Step(current.code=="CB51.4.2"&&answer=="yes");
       then
            step.setNextQ("CB51.5.2");
            update(step);end
rule "Step CB51.4.2 - NO"
       when
             step:Step(current.code=="CB51.4.2"&&answer=="no");
       then
              step.setNextQ("CB51.7.1.2");
              update(step);end
rule "Step CB51.5.2 - YES"
       when
            step:Step(current.code=="CB51.5.2"&&answer=="yes");
       then
            step.setNextQ("CB51.6.2");
            update(step);end
rule "Step CB51.5.2 - NO"
       when
             step:Step(current.code=="CB51.5.2"&&answer=="no");
       then
            step.setNextQ("CB51.7.1.2");
            update(step);end
rule "Step CB51.6.2 - YES"
       when
            step:Step(current.code=="CB51.6.2"&&answer=="yes");
       then
            step.setNextQ("CB51.7.1.2");
            update(step);end
rule "Step CB51.6.2 - NO"
       when
             step:Step(current.code=="CB51.6.2"&&answer=="no");
       then
            step.setNextQ("CB52.1.2");
            update(step);end

rule "Step CB51.7.1.2 - YES"
       when
            step:Step(current.code=="CB51.7.1.2"&&answer=="yes");
       then
            step.setNextQ("CB52.1.2");
            update(step);end
rule "Step CB51.7.1.2 - NO"
       when
             step:Step(current.code=="CB51.7.1.2"&&answer=="no");
       then
            step.setNextQ("CB51.7.2.2");
            update(step);end

rule "Step CB51.7.2.2 - YES"
       when
            step:Step(current.code=="CB51.7.2.2"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
rule "Step CB51.7.2.2 - NO"
       when
             step:Step(current.code=="CB51.7.2.2"&&answer=="no");
       then
            step.setNextQ("CB52.1.2");
            update(step);end

rule "Step CB52.1.2 - YES"
       when
            step:Step(current.code=="CB52.1.2"&&answer=="yes");
       then
            step.setNextQ("CB52.2.2.2");
            update(step);end
rule "Step CB52.1.2 - NO(with_condition)"
       when
             step:Step(current.code=="CB52.1.2"&&answer=="no_with_condition");
       then
            step.setNextQ("CB52.2.1.2");
            update(step);end
rule "Step CB52.1.2 - NO (with step)"
       when
            step:Step(current.code=="CB52.1.2"&&answer=="no_with_step");
       then
            step.setNextQ("CB53.3.2");
           update(step);end
rule "Step CB52.1.2 - NO(not condition)"
       when
             step:Step(current.code=="CB52.1.2"&&answer=="no_not_condition");
       then
            step.setTestOK();
            update(step);end

rule "Step CB52.2.1.2 - YES"
       when
             step:Step(current.code=="CB52.2.1.2"&&answer=="yes");
       then
            step.setNextQ("CB53.1.2");
            update(step);end

rule "Step CB52.2.1.2 - NO"
       when
             step:Step(current.code=="CB52.2.1.2"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end
rule "Step CB52.2.2.2 - YES"
       when
             step:Step(current.code=="CB52.2.2.2"&&answer=="yes");
       then
            step.setNextQ("CB54");
            update(step);end
rule "Step CB52.2.2.2 - NO"
       when
             step:Step(current.code=="CB52.2.2.2"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end

rule "Step CB53.1.2 - YES"
       when
             step:Step(current.code=="CB53.1.2"&&answer=="yes");
       then
            step.setNextQ("CB53.2.2");
            update(step);end
rule "Step CB53.1.2 - NO"
       when
             step:Step(current.code=="CB53.1.2"&&answer=="no");
       then
            step.setNextQ("CB53.2.2");
            update(step);end
rule "Step CB53.2.2 - YES"
       when
             step:Step(current.code=="CB53.2.2"&&answer=="yes");
       then
            step.setNextQ("CB53.3.2");
            update(step);end
 rule "Step CB53.2.2 - NO"
       when
             step:Step(current.code=="CB53.2.2"&&answer=="no");
       then
            step.setNextQ("CB53.3.2");
            update(step);end

 rule "Step CB53.3.2 - YES"
       when
             step:Step(current.code=="CB53.3.2"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
 rule "Step CB53.3.2 - NO"
       when
             step:Step(current.code=="CB53.3.2"&&answer=="no");
       then
            step.setNextQ("CB53.4.2");
            update(step);end

 rule "Step CB53.4.2 - YES"
       when
             step:Step(current.code=="CB53.4.2"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
 rule "Step CB53.4.2 - NO"
       when
             step:Step(current.code=="CB53.4.2"&&answer=="no");
       then
            step.setNextQ("CB53.5.2");
            update(step);end

rule "Step CB53.5.2 - YES"
       when
             step:Step(current.code=="CB53.5.2"&&answer=="yes");
       then
            step.setNextQ("CB53.5.1.2");
            update(step);end
rule "Step CB53.5.2 - NO"
       when
             step:Step(current.code=="CB53.5.2"&&answer=="no");
       then
            step.setNextQ("CB54");
            update(step);end

rule "Step CB53.5.1.2 - YES"
       when
             step:Step(current.code=="CB53.5.1.2"&&answer=="yes");
       then
            step.setNextQ("CB54");
            update(step);end
rule "Step CB53.5.1.2 - NO"
       when
             step:Step(current.code=="CB53.5.1.2"&&answer=="no");
       then
             step.setTestFailed();
             update(step);end




rule "Step CB54 - YES"
       when
             step:Step(current.code=="CB54"&&answer=="yes");
       then
            step.setNextQ("CB55");
            update(step);end

rule "Step CB54 - NO"
       when
             step:Step(current.code=="CB54"&&answer=="no");
       then
            step.setNextQ("CB60");
            update(step);end

rule "Step CB55 - YES"
       when
             step:Step(current.code=="CB55"&&answer=="yes");
       then
            step.setNextQ("CB56");
             update(step);end
rule "Step CB55 - NO"
       when
             step:Step(current.code=="CB55"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end

//-----------
rule "Step CB56 - FIXED"
      when
           step:Step(current.code=="CB56"&&answer=="fixed");
      then
           step.setNextQ("CB58.1");
           update(step);end
rule "Step CB56 - FLOAT"
      when
            step:Step(current.code=="CB56"&&answer=="floating");
      then
           step.setNextQ("CB57.1");
           update(step);end

rule "Step CB57.1 - YES"
      when
           step:Step(current.code=="CB57.1"&&answer=="yes");
      then
           step.setNextQ("CB57.2");
           update(step);end
rule "Step CB57.1 - NO"
      when
            step:Step(current.code=="CB57.1"&&answer=="no");
      then
             step.setTestFailed();
             update(step);end

rule "Step CB57.2 - YES"
      when
           step:Step(current.code=="CB57.2"&&answer=="yes");
      then
             step.setTestFailed();
             update(step);end
rule "Step CB57.2 - NO"
      when
            step:Step(current.code=="CB57.2"&&answer=="no");
      then
           step.setNextQ("CB57.3");
           update(step);end
rule "Step CB57.3 - YES"
      when
           step:Step(current.code=="CB57.3"&&answer=="yes");
      then
             step.setTestFailed();
             update(step);end
rule "Step CB57.3 - NO"
      when
            step:Step(current.code=="CB57.3"&&answer=="no");
      then
           step.setNextQ("CB57.4");
           update(step);end

rule "Step CB57.4 - YES"
      when
           step:Step(current.code=="CB57.4"&&answer=="yes");
      then
           step.setNextQ("CB57.5");
           update(step);end
rule "Step CB57.4 - NO"
      when
            step:Step(current.code=="CB57.4"&&answer=="no");
      then
             step.setNextQ("CB57.7.1");
             update(step);end
rule "Step CB57.5 - YES"
      when
           step:Step(current.code=="CB57.5"&&answer=="yes");
      then
           step.setNextQ("CB57.6");
           update(step);end
rule "Step CB57.5 - NO"
      when
            step:Step(current.code=="CB57.5"&&answer=="no");
      then
           step.setNextQ("CB57.7.1");
           update(step);end
rule "Step CB57.6 - YES"
      when
           step:Step(current.code=="CB57.6"&&answer=="yes");
      then
           step.setNextQ("CB57.7.1");
           update(step);end
rule "Step CB57.6 - NO"
      when
            step:Step(current.code=="CB57.6"&&answer=="no");
      then
           step.setNextQ("CB58.1");
           update(step);end

rule "Step CB57.7.1 - YES"
      when
           step:Step(current.code=="CB57.7.1"&&answer=="yes");
      then
           step.setNextQ("CB58.1");
           update(step);end
rule "Step CB57.7.1 - NO"
      when
            step:Step(current.code=="CB57.7.1"&&answer=="no");
      then
           step.setNextQ("CB57.7.2");
           update(step);end

rule "Step CB57.7.2 - YES"
      when
           step:Step(current.code=="CB57.7.1"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);end
rule "Step CB57.7.2 - NO"
      when
            step:Step(current.code=="CB57.7.2"&&answer=="no");
      then
           step.setNextQ("CB58.1");
           update(step);end

rule "Step CB58.1 - YES"
      when
           step:Step(current.code=="CB58.1"&&answer=="yes");
      then
           step.setNextQ("CB58.2.2");
           update(step);end
rule "Step CB58.1 - NO(with_condition)"
      when
            step:Step(current.code=="CB58.1"&&answer=="no_with_condition");
      then
           step.setNextQ("CB8.2.1");
           update(step);end
rule "Step CB58.1 - NO (with step)"
      when
           step:Step(current.code=="CB58.1"&&answer=="no_with_step");
      then
           step.setNextQ("CB59.1");
           update(step);end
rule "Step CB58.1 - NO(not_condition)"
      when
            step:Step(current.code=="CB58.1"&&answer=="no_not_condition");
      then
           step.setNextQ("CB10");
           update(step);end

rule "Step CB58.2.2 - NO"
      when
            step:Step(current.code=="CB58.2.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end

rule "Step CB59.1 - YES"
      when
            step:Step(current.code=="CB59.1"&&answer=="yes");
      then
           step.setNextQ("CB59.2");
           update(step);end
rule "Step CB59.1 - NO"
      when
            step:Step(current.code=="CB59.1"&&answer=="no");
      then
           step.setNextQ("CB59.2");
           update(step);end
rule "Step CB59.2 - YES"
      when
            step:Step(current.code=="CB59.2"&&answer=="yes");
      then
           step.setNextQ("CB59.3");
           update(step);end


rule "Step CB59.3 - YES"
      when
            step:Step(current.code=="CB59.3"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);end
rule "Step CB59.3 - NO"
      when
            step:Step(current.code=="CB59.3"&&answer=="no");
      then
           step.setNextQ("CB59.4");
           update(step);end

rule "Step CB59.4 - YES"
      when
            step:Step(current.code=="CB59.4"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CB59.4 - NO"
      when
            step:Step(current.code=="CB59.4"&&answer=="no");
      then
           step.setNextQ("CB59.5");
           update(step);end

rule "Step CB59.5 - YES"
      when
            step:Step(current.code=="CB59.5"&&answer=="yes");
      then
           step.setNextQ("CB59.5.1");
           update(step);end
rule "Step CB59.5 - NO"
      when
            step:Step(current.code=="CB59.5"&&answer=="no");
      then
           step.setNextQ("CB60");
           update(step);end

rule "Step CB59.5.1 - YES"
      when
            step:Step(current.code=="CB59.5.1"&&answer=="yes");
      then
           step.setNextQ("CB60");
           update(step);end
rule "Step CB59.5.1 - NO"
      when
            step:Step(current.code=="CB59.5.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end


 rule "Step CB60 - YES"
       when
             step:Step(current.code=="CB60"&&answer=="yes");
       then
            step.setNextQ("CB61");
            update(step);end
 rule "Step CB60 - NO"
       when
             step:Step(current.code=="CB60"&&answer=="no");
       then
            step.setNextQ("CB61");
            update(step);end

 rule "Step CB61 - YES"
       when
             step:Step(current.code=="CB61"&&answer=="yes");
       then
            step.setNextQ("CB62");
            update(step);end
rule "Step CB61 - NO"
       when
             step:Step(current.code=="CB61"&&answer=="no");
       then
            step.setNextQ("CB62");
             update(step);end

rule "Step CB61 - No_amount"
         when
               step:Step(current.code=="CB61"&&answer=="no_amount_update");
         then
               step.setTestFailed();
               update(step);end

rule "Step CB62 - YES"
         when
               step:Step(current.code=="CB62"&&answer=="yes");
         then
               step.setTestFailed();
               update(step);end

rule "Step CB62 - NO"
         when
               step:Step(current.code=="CB62"&&answer=="yes");
         then
            step.setNextQ("CB63");
               update(step);end


rule "Step CB63 - YES"
          when
                step:Step(current.code=="CB63"&&answer=="yes");
          then
           step.setNextQ("CB63.1");
           update(step);end
rule "Step CB63 - NO"
          when
                step:Step(current.code=="CB63"&&answer=="no");
          then
           step.setTestOK();
           update(step);end

rule "Step CB63.1 - YES"
          when
                step:Step(current.code=="CB63.1"&&answer=="yes");
          then
           step.setTestOK();
           update(step);end
rule "Step CB63.1 - NO"
          when
                step:Step(current.code=="CB63.1"&&answer=="no");
          then
           step.setTestFailed();
           update(step);end

rule "Step CB64 - YES"
          when
                step:Step(current.code=="CB64"&&answer=="yes");
          then
                step.setNextQ("CB65");
                update(step);end
rule "Step CB64 - NO"
          when
                step:Step(current.code=="CB64"&&answer=="no");
          then
           step.setTestOK();
           update(step);end

rule "Step CB65 - YES"
          when
                step:Step(current.code=="CB64"&&answer=="yes");
          then
                step.setTestFailed();
                update(step);end
rule "Step CB65 - NO"
          when
                step:Step(current.code=="CB65"&&answer=="no");
          then
           step.setTestOK();
           update(step);end

//START LEGAL ENTITY

rule "define first question of CLE test"
    when
        product:Product(productCode=="credit_legal_entity");
    then
        product.setFirstQuestionCode("CLE1");
        update(product);
end

rule "Step CLE1 - YES"
    when
        step:Step(current.code=="CLE1"&&answer=="yes");
    then
        step.setNextQ("CLE2");
        update(step);
end

rule "Step CLE1 - NO"
    when
        step:Step(current.code=="CLE1"&&answer=="no");
    then
        step.setNextQ("CLE6");
        update(step);
end

rule "Step CLE2 - YES-Only CLI"
    when
        step:Step(current.code=="CLE2"&&answer=="yes_only_cli");
    then
        step.setNextQ("CLE3.1.2");
        update(step);
end
rule "Step CLE2 - NO-not only CLI"
    when
        step:Step(current.code=="CLE2"&&answer=="no_not_only_cli");
    then
        step.setNextQ("CLE3.1.1");
        update(step);
        end
rule "Step CLE2 - NO"
     when
         step:Step(current.code=="CLE2"&&answer=="no_not_cli");
     then
         step.setNextQ("CLE4");
         update(step);
end
rule "Step CLE3.1.2 - YES"
     when
         step:Step(current.code=="CLE3.1.2"&&answer=="yes");
     then
        step.setTestFailed();
        update(step);end
rule "Step CLE3.1.2 - NO"
     when
         step:Step(current.code=="CLE3.1.2"&&answer=="no");
     then
         step.setNextQ("CLE3.2.2");
         update(step);end
rule "Step CLE3.2.2 - YES"
     when
         step:Step(current.code=="CLE3.2.2"&&answer=="yes");
     then
         step.setNextQ("CLE3.3.2");
         update(step);end
rule "Step CLE3.2.2 - NO"
     when
         step:Step(current.code=="CLE3.2.2"&&answer=="no");
     then
         step.setTestFailed();
         update(step);end
rule "Step CLE3.3.2 - YES"
     when
         step:Step(current.code=="CLE3.3.2"&&answer=="yes");
     then
         step.setNextQ("CLE3.4.2");
         update(step);end
rule "Step CLE3.3.2 - NO"
     when
         step:Step(current.code=="CLE3.3.2"&&answer=="no");
     then
         step.setTestFailed();
         update(step);end
rule "Step CLE3.4.2 - YES"
     when
         step:Step(current.code=="CLE3.4.2"&&answer=="yes");
     then
         step.setTestFailed();
         update(step);end
rule "Step CLE3.4.2 - NO"
     when
         step:Step(current.code=="CLE3.4.2"&&answer=="no");
     then
         step.setNextQ("CLE3.5.2");
         update(step);end

rule "Step CLE3.5.2 - YES"
     when
         step:Step(current.code=="CLE3.5.2"&&answer=="yes");
     then
        step.setNextQ("CLE6");
        update(step);end
rule "Step CLE3.5.2 - NO"
     when
         step:Step(current.code=="CLE3.5.2"&&answer=="no");
     then
         step.setNextQ("CLE3.6.2");
         update(step);end

 rule "Step CLE3.6.2 - YES"
      when
          step:Step(current.code=="CLE3.6.2"&&answer=="yes");
      then
         step.setNextQ("CLE6");
         update(step);end
 rule "Step CLE3.6.2 - NO"
      when
          step:Step(current.code=="CLE3.6.2"&&answer=="no");
      then
         step.setTestFailed();
         update(step);
end

rule "Step CLE3.1.1 - YES"
     when
         step:Step(current.code=="CLE3.1.1"&&answer=="yes");
     then
        step.setTestFailed();
        update(step);
end
rule "Step CLE3.1.1 - NO"
     when
         step:Step(current.code=="CLE3.1.1"&&answer=="no");
     then
         step.setNextQ("CLE3.2.1");
         update(step);end
rule "Step CLE3.2.1 - YES"
     when
         step:Step(current.code=="CLE3.2.1"&&answer=="yes");
     then
         step.setNextQ("CLE3.3.1");
         update(step);end
rule "Step CLE3.2.1 - NO"
     when
         step:Step(current.code=="CLE3.2.1"&&answer=="no");
     then
         step.setTestFailed();
         update(step);end
rule "Step CLE3.3.1 - YES"
     when
         step:Step(current.code=="CLE3.3.1"&&answer=="yes");
     then
         step.setNextQ("CLE3.4.1");
         update(step);end
rule "Step CLE3.3.1 - NO"
     when
         step:Step(current.code=="CLE3.3.1"&&answer=="no");
     then
         step.setTestFailed();
         update(step);end
rule "Step CLE3.4.1 - YES"
     when
         step:Step(current.code=="CLE3.4.1"&&answer=="yes");
     then
         step.setTestFailed();
         update(step);end
rule "Step CLE3.4.1 - NO"
     when
         step:Step(current.code=="CLE3.4.1"&&answer=="no");
     then
         step.setNextQ("CLE3.5.1");
         update(step);end

rule "Step CLE3.5.1 - YES"
     when
         step:Step(current.code=="CLE3.5.1"&&answer=="yes");
     then
        step.setNextQ("CLE4");
        update(step);end
rule "Step CLE3.5.1 - NO"
     when
         step:Step(current.code=="CLE3.5.1"&&answer=="no");
     then
         step.setNextQ("CLE3.6.1");
         update(step);end

rule "Step CLE3.6.1 - YES"
      when
          step:Step(current.code=="CLE3.6.1"&&answer=="yes");
      then
         step.setNextQ("CLE4");
         update(step);end
rule "Step CLE3.6.1 - NO"
      when
          step:Step(current.code=="CLE3.6.1"&&answer=="no");
      then
         step.setTestFailed();
         update(step);end

rule "Step CLE4 - YES"
      when
           step:Step(current.code=="CLE4"&&answer=="yes");
      then
           step.setNextQ("CLE6");
           update(step);end
rule "Step CLE4 - NO"
      when
            step:Step(current.code=="CLE4"&&answer=="no");
      then
           step.setNextQ("CLE5");
           update(step);end

rule "Step CLE5 - YES"
      when
           step:Step(current.code=="CLE5"&&answer=="yes");
      then
           step.setNextQ("CLE6");
           update(step);end
rule "Step CLE5 - NO"
        when
            step:Step(current.code=="CLE5"&&answer=="no");
        then
             step.setTestFailed();
             update(step);
             end

rule "Step CLE6 - FIXED"
      when
           step:Step(current.code=="CLE6"&&answer=="fixed");
      then
           step.setNextQ("CLE8.1");
           update(step);end
rule "Step CLE6 - FLOAT"
      when
            step:Step(current.code=="CLE6"&&answer=="floating");
      then
           step.setNextQ("CLE7.1");
           update(step);end

rule "Step CLE7.1 - YES"
      when
           step:Step(current.code=="CLE7.1"&&answer=="yes");
      then
           step.setNextQ("CLE7.2");
           update(step);end
rule "Step CLE7.1 - NO"
      when
            step:Step(current.code=="CLE7.1"&&answer=="no");
      then
             step.setTestFailed();
             update(step);end

rule "Step CLE7.2 - YES"
      when
           step:Step(current.code=="CLE7.2"&&answer=="yes");
      then
             step.setTestFailed();
             update(step);end
rule "Step CLE7.2 - NO"
      when
            step:Step(current.code=="CLE7.2"&&answer=="no");
      then
           step.setNextQ("CLE7.3");
           update(step);end
rule "Step CLE7.3 - YES"
      when
           step:Step(current.code=="CLE7.3"&&answer=="yes");
      then
             step.setTestFailed();
             update(step);end
rule "Step CLE7.3 - NO"
      when
            step:Step(current.code=="CLE7.3"&&answer=="no");
      then
           step.setNextQ("CLE7.4");
           update(step);end

rule "Step CLE7.4 - YES"
      when
           step:Step(current.code=="CLE7.4"&&answer=="yes");
      then
           step.setNextQ("CLE7.5");
           update(step);end
rule "Step CLE7.4 - NO"
      when
            step:Step(current.code=="CLE7.4"&&answer=="no");
      then
             step.setNextQ("CLE7.7.1");
             update(step);end
rule "Step CLE7.5 - YES"
      when
           step:Step(current.code=="CLE7.5"&&answer=="yes");
      then
           step.setNextQ("CLE7.6");
           update(step);end
rule "Step CLE7.5 - NO"
      when
            step:Step(current.code=="CLE7.5"&&answer=="no");
      then
           step.setNextQ("CLE7.7.1");
           update(step);end
rule "Step CLE7.6 - YES"
      when
           step:Step(current.code=="CLE7.6"&&answer=="yes");
      then
           step.setNextQ("CLE7.7.1");
           update(step);end
rule "Step CLE7.6 - NO"
      when
            step:Step(current.code=="CLE7.6"&&answer=="no");
      then
           step.setNextQ("CLE8.1");
           update(step);end

rule "Step CLE7.7.1 - YES"
      when
           step:Step(current.code=="CLE7.7.1"&&answer=="yes");
      then
           step.setNextQ("CLE8.1");
           update(step);end
rule "Step CLE7.7.1 - NO"
      when
            step:Step(current.code=="CLE7.7.1"&&answer=="no");
      then
           step.setNextQ("CLE7.7.2");
           update(step);end

rule "Step CLE7.7.2 - YES"
      when
           step:Step(current.code=="CLE7.7.1"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);
end
rule "Step CLE7.7.2 - NO"
      when
            step:Step(current.code=="CLE7.7.1"&&answer=="no");
      then
           step.setNextQ("CLE8.1");
           update(step);
end

rule "Step CLE8.1 - YES"
      when
           step:Step(current.code=="CLE8.1"&&answer=="yes");
      then
           step.setNextQ("CLE8.2.2");
           update(step);end
rule "Step CLE8.1 - NO(with_condition)"
      when
            step:Step(current.code=="CLE8.1"&&answer=="no_with_condition");
      then
           step.setNextQ("CLE8.2.1");
           update(step);end

 rule "Step CLE8.1 - NO(with_steps)"
       when
             step:Step(current.code=="CLE8.1"&&answer=="no_with_step");
       then
            step.setNextQ("CLE9.1");
            update(step);end

rule "Step CLE8.1 - NO (not condition)"
      when
           step:Step(current.code=="CLE8.1"&&answer=="no_not_condition");
      then
           step.setNextQ("CLE10");
           update(step);end


rule "Step CLE8.2.1 - YES"
      when
            step:Step(current.code=="CLE8.2.1"&&answer=="yes");
      then
           step.setNextQ("CLE9.1");
           update(step);end

rule "Step CLE8.2.1 - NO"
      when
            step:Step(current.code=="CLE8.2.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end
rule "Step CLE8.2.2 - YES"
      when
            step:Step(current.code=="CLE8.2.2"&&answer=="yes");
      then
           step.setNextQ("CLE10");
           update(step);end

rule "Step CLE8.2.2 - NO"
      when
            step:Step(current.code=="CLE8.2.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end

rule "Step CLE9.1 - YES"
      when
            step:Step(current.code=="CLE9.1"&&answer=="yes");
      then
           step.setNextQ("CLE9.2");
           update(step);end
rule "Step CLE9.1 - NO"
      when
            step:Step(current.code=="CLE9.1"&&answer=="no");
      then
           step.setNextQ("CLE9.2");
           update(step);end
rule "Step CLE9.2 - YES"
      when
            step:Step(current.code=="CLE9.2"&&answer=="yes");
      then
           step.setNextQ("CLE9.3");
           update(step);end
rule "Step CLE9.2 - NO"
      when
            step:Step(current.code=="CLE9.2"&&answer=="no");
      then
           step.setNextQ("CLE9.3");
           update(step);
end

rule "Step CLE9.3 - YES"
      when
            step:Step(current.code=="CLE9.3"&&answer=="yes");
      then
           step.setNextQ("CLE9.3.1");
           update(step);
end
rule "Step CLE9.3 - NO"
      when
            step:Step(current.code=="CLE9.3"&&answer=="no");
      then
           step.setNextQ("CLE9.4");
           update(step);end

rule "Step CLE9.3.1 - YES"
      when
            step:Step(current.code=="CLE9.3.1"&&answer=="yes");
      then
           step.setNextQ("CLE9.4");
           update(step);end
rule "Step CLE9.3.1 - NO"
      when
            step:Step(current.code=="CLE9.3.1"&&answer=="no");
      then
           step.setNextQ("CLE9.3.2");
           update(step);end

rule "Step CLE9.3.2 - YES"
      when
            step:Step(current.code=="CLE9.3.2"&&answer=="yes");
      then
           step.setNextQ("CLE9.4");
           update(step);end
rule "Step CLE9.3.2 - NO"
      when
            step:Step(current.code=="CLE9.3.2"&&answer=="no");
      then
           step.setNextQ("CLE9.3.3");
           update(step);end

rule "Step CLE9.3.3 - YES"
      when
            step:Step(current.code=="CLE9.3.3"&&answer=="yes");
      then
           step.setNextQ("CLE9.4");
           update(step);end
rule "Step CLE9.3.3 - NO"
      when
            step:Step(current.code=="CLE9.3.3"&&answer=="no");
      then
            step.setTestFailed();
           update(step);end
rule "Step CLE9.4 - YES"
      when
            step:Step(current.code=="CLE9.4"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CLE9.4 - NO"
      when
            step:Step(current.code=="CLE9.4"&&answer=="no");
      then
           step.setNextQ("CLE9.5");
           update(step);end

rule "Step CLE9.5 - YES"
      when
            step:Step(current.code=="CLE9.5"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CLE9.5 - NO"
      when
            step:Step(current.code=="CLE9.5"&&answer=="no");
      then
           step.setNextQ("CLE9.6");
           update(step);end

rule "Step CLE9.6 - YES"
      when
            step:Step(current.code=="CLE9.6"&&answer=="yes");
      then
           step.setNextQ("CLE9.6.1");
           update(step);end
rule "Step CLE9.6 - NO"
      when
            step:Step(current.code=="CLE9.6"&&answer=="no");
      then
           step.setNextQ("CLE10");
           update(step);end

rule "Step CLE9.6.1 - YES"
      when
            step:Step(current.code=="CLE9.6.1"&&answer=="yes");
      then
           step.setNextQ("CLE10");
           update(step);end
rule "Step CLE9.6.1 - NO"
      when
            step:Step(current.code=="CLE9.6.1"&&answer=="no");
      then
            step.setTestFailed();
           update(step);end
rule "Step CLE10 - YES"
      when
            step:Step(current.code=="CLE10"&&answer=="yes");
      then
           step.setNextQ("CLE11");
           update(step);end
rule "Step CLE10 - NO"
      when
            step:Step(current.code=="CLE10"&&answer=="no");
      then
           step.setNextQ("CLE15");
           update(step);end

rule "Step CLE11 - YES"
      when
            step:Step(current.code=="CLE11"&&answer=="yes");
      then
           step.setNextQ("CLE14.1");
           update(step);end
rule "Step CLE11 - NO"
      when
            step:Step(current.code=="CLE11"&&answer=="no");
      then
           step.setNextQ("CLE12");
           update(step);end

rule "Step CLE12 - YES"
      when
            step:Step(current.code=="CLE12"&&answer=="yes");
      then
           step.setNextQ("CLE15");
           update(step);end
rule "Step CLE12 - NO"
      when
            step:Step(current.code=="CLE12"&&answer=="no");
      then
           step.setNextQ("CLE13.1");
           update(step);end

rule "Step CLE13.1 - YES"
      when
            step:Step(current.code=="CLE13.1"&&answer=="yes");
      then
           step.setNextQ("CLE13.2");
           update(step);end
rule "Step CLE13.1 - NO"
      when
            step:Step(current.code=="CLE13.1"&&answer=="no");
      then
           step.setNextQ("CLE13.2");
           update(step);end

rule "Step CLE13.2 - YES"
      when
            step:Step(current.code=="CLE13.2"&&answer=="yes");
      then
           step.setNextQ("CLE13.3");
           update(step);end
rule "Step CLE13.2 - NO"
      when
            step:Step(current.code=="CLE13.2"&&answer=="no");
      then
           step.setNextQ("CLE13.3");
           update(step);end

rule "Step CLE13.3 - YES"
      when
            step:Step(current.code=="CLE13.3"&&answer=="yes");
      then
           step.setNextQ("CLE13.4");
           update(step);end
rule "Step CLE13.3 - NO"
      when
            step:Step(current.code=="CLE13.3"&&answer=="no");
      then
           step.setNextQ("CLE13.4");
           update(step);end

rule "Step CLE13.4 - YES"
      when
            step:Step(current.code=="CLE13.4"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CLE13.4 - NO"
      when
            step:Step(current.code=="CLE13.4"&&answer=="no");
      then
           step.setNextQ("CLE13.5");
           update(step);end
rule "Step CLE13.5 - YES"
      when
            step:Step(current.code=="CLE13.5"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CLE13.5 - NO"
      when
            step:Step(current.code=="CLE13.5"&&answer=="no");
      then
           step.setNextQ("CLE13.6");
           update(step);end
rule "Step CLE13.6 - YES"
      when
            step:Step(current.code=="CLE13.6"&&answer=="yes");
      then
           step.setNextQ("CLE13.6.1");
           update(step);end
rule "Step CLE13.6 - NO"
      when
            step:Step(current.code=="CLE13.6"&&answer=="no");
      then
           step.setNextQ("CLE15");
           update(step);end
rule "Step CLE13.6.1 - YES"
      when
            step:Step(current.code=="CLE13.6.1"&&answer=="yes");
      then
           step.setNextQ("CLE15");
           update(step);end
rule "Step CLE13.6.1 - NO"
      when
            step:Step(current.code=="CLE13.6.1"&&answer=="no");
      then
            step.setTestFailed();
           update(step);end

rule "Step CLE14.1 - YES"
      when
            step:Step(current.code=="CLE14.1"&&answer=="yes");
      then
           step.setNextQ("CLE14.4");
           update(step);end
rule "Step CLE14.1 - NO"
      when
            step:Step(current.code=="CLE14.1"&&answer=="no");
      then
           step.setNextQ("CLE14.2");
           update(step);end

rule "Step CLE14.2 - YES"
      when
            step:Step(current.code=="CLE14.2"&&answer=="yes");
      then
           step.setNextQ("CLE14.4");
           update(step);end
rule "Step CLE14.2 - NO"
      when
            step:Step(current.code=="CLE14.2"&&answer=="no");
      then
           step.setNextQ("CLE14.3");
           update(step);end

rule "Step CLE14.3 - YES"
      when
            step:Step(current.code=="CLE14.3"&&answer=="yes");
      then
           step.setNextQ("CLE14.4");
           update(step);end
rule "Step CLE14.3 - NO"
      when
            step:Step(current.code=="CLE14.3"&&answer=="no");
      then
           step.setNextQ("CLE12");
           update(step);end

rule "Step CLE14.4 - YES"
      when
            step:Step(current.code=="CLE14.4"&&answer=="yes");
      then
           step.setNextQ("CLE12");
           update(step);end
rule "Step CLE14.4 - NO"
      when
            step:Step(current.code=="CLE14.4"&&answer=="no");
      then
            step.setTestFailed();
            update(step);end
rule "Step CLE15 - YES"
      when
            step:Step(current.code=="CLE15"&&answer=="yes");
      then
           step.setNextQ("CLE16");
           update(step);end
rule "Step CLE15 - NO"
      when
            step:Step(current.code=="CLE15"&&answer=="no");
      then
           step.setNextQ("CLE24");
           update(step);end

rule "Step CLE16 - YES"
      when
            step:Step(current.code=="CLE16"&&answer=="yes");
      then
           step.setNextQ("CLE24");
           update(step);end
rule "Step CLE16 - NO"
      when
            step:Step(current.code=="CLE16"&&answer=="no");
      then
           step.setNextQ("CLE17");
           update(step);end

rule "Step CLE17 - YES"
      when
            step:Step(current.code=="CLE17"&&answer=="yes");
      then
           step.setNextQ("CLE24");
           update(step);end
rule "Step CLE17 - NO"
      when
            step:Step(current.code=="CLE17"&&answer=="no");
      then
           step.setNextQ("CLE18");
           update(step);end


rule "Step CLE18 - FIXED"
      when
           step:Step(current.code=="CLE18"&&answer=="fixed");
      then
           step.setNextQ("CLE20.1");
           update(step);end
rule "Step CLE18 - FLOAT"
      when
            step:Step(current.code=="CLE18"&&answer=="floating");
      then
           step.setNextQ("CLE19.1");
           update(step);end

rule "Step CLE19.1 - YES"
      when
           step:Step(current.code=="CLE19.1"&&answer=="yes");
      then
           step.setNextQ("CLE19.2");
           update(step);end
rule "Step CLE19.1 - NO"
      when
            step:Step(current.code=="CLE19.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end
rule "Step CLE19.2 - YES"
      when
           step:Step(current.code=="CLE19.2"&&answer=="yes");
      then
             step.setTestFailed();
             update(step);end
rule "Step CLE19.2 - NO"
      when
            step:Step(current.code=="CLE19.2"&&answer=="no");
      then
           step.setNextQ("CLE19.3");
           update(step);end
rule "Step CLE19.3 - YES"
      when
           step:Step(current.code=="CLE19.3"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);end
rule "Step CLE19.3 - NO"
      when
            step:Step(current.code=="CLE19.3"&&answer=="no");
      then
           step.setNextQ("CLE19.4");
           update(step);end

rule "Step CLE19.4 - YES"
      when
           step:Step(current.code=="CLE19.4"&&answer=="yes");
      then
           step.setNextQ("CLE19.5");
           update(step);end
rule "Step CLE19.4 - NO"
      when
            step:Step(current.code=="CLE19.4"&&answer=="no");
      then
             step.setNextQ("CLE19.7.1");
             update(step);end
rule "Step CLE19.5 - YES"
      when
           step:Step(current.code=="CLE19.5"&&answer=="yes");
      then
           step.setNextQ("CLE19.6");
           update(step);end
rule "Step CLE19.5 - NO"
      when
            step:Step(current.code=="CLE19.5"&&answer=="no");
      then
           step.setNextQ("CLE19.7.1");
           update(step);end
rule "Step CLE19.6 - YES"
      when
           step:Step(current.code=="CLE19.6"&&answer=="yes");
      then
           step.setNextQ("CLE19.7.1");
           update(step);end
rule "Step CLE19.6 - NO"
      when
            step:Step(current.code=="CLE19.6"&&answer=="no");
      then
           step.setNextQ("CLE20.1");
           update(step);end

rule "Step CLE19.7.1 - YES"
      when
           step:Step(current.code=="CLE19.7.1"&&answer=="yes");
      then
           step.setNextQ("CLE20.1");
           update(step);end
rule "Step CLE19.7.1 - NO"
      when
            step:Step(current.code=="CLE19.7.1"&&answer=="no");
      then
           step.setNextQ("CLE19.7.2");
           update(step);end

rule "Step CLE19.7.2 - YES"
      when
           step:Step(current.code=="CLE19.7.2"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);end
rule "Step CLE19.7.2 - NO"
      when
            step:Step(current.code=="CLE19.7.2"&&answer=="no");
      then
           step.setNextQ("CLE20.1");
           update(step);end

rule "Step CLE20.1 - YES"
      when
           step:Step(current.code=="CLE20.1"&&answer=="yes");
      then
           step.setNextQ("CLE20.2.2");
           update(step);end
rule "Step CLE20.1 - NO(with_condition)"
      when
            step:Step(current.code=="CLE20.1"&&answer=="no_with_condition");
      then
           step.setNextQ("CLE20.2.1");
           update(step);end
   rule "Step CLE20.1 - NO(with_steps)"
         when
               step:Step(current.code=="CLE20.1"&&answer=="no_with_step");
         then
              step.setNextQ("CLE21.1");
              update(step);end

rule "Step CLE20.1 - NO (not condition)"
      when
           step:Step(current.code=="CLE20.1"&&answer=="no_not_condition");
      then
           step.setNextQ("CLE22");
           update(step);end


rule "Step CLE20.2.1 - YES"
      when
            step:Step(current.code=="CLE20.2.1"&&answer=="yes");
      then
           step.setNextQ("CLE21.1");
           update(step);end

rule "Step CLE20.2.1 - NO"
      when
            step:Step(current.code=="CLE20.2.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end
rule "Step CLE20.2.2 - YES"
      when
            step:Step(current.code=="CLE20.2.2"&&answer=="yes");
      then
           step.setNextQ("CLE22");
           update(step);end

rule "Step CLE20.2.2 - NO"
      when
            step:Step(current.code=="CLE20.2.2"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end

rule "Step CLE21.1 - YES"
      when
            step:Step(current.code=="CLE21.1"&&answer=="yes");
      then
           step.setNextQ("CLE21.2");
           update(step);end
rule "Step CLE21.1 - NO"
      when
            step:Step(current.code=="CLE21.1"&&answer=="no");
      then
           step.setNextQ("CLE21.2");
           update(step);end
rule "Step CLE21.2 - YES"
      when
            step:Step(current.code=="CLE21.2"&&answer=="yes");
      then
           step.setNextQ("CLE21.3");
           update(step);end
rule "Step CLE21.2 - NO"
      when
            step:Step(current.code=="CLE21.2"&&answer=="no");
      then
           step.setNextQ("CLE21.3");
           update(step);end

rule "Step CLE21.3 - YES"
      when
            step:Step(current.code=="CLE21.3"&&answer=="yes");
      then
           step.setNextQ("CLE21.3.1");
           update(step);end
rule "Step CLE21.3 - NO"
      when
            step:Step(current.code=="CLE21.3"&&answer=="no");
      then
           step.setNextQ("CLE21.4");
           update(step);end

rule "Step CLE21.3.1 - YES"
      when
            step:Step(current.code=="CLE21.3.1"&&answer=="yes");
      then
           step.setNextQ("CLE21.4");
           update(step);end
rule "Step CLE21.3.1 - NO"
      when
            step:Step(current.code=="CLE21.3.1"&&answer=="no");
      then
           step.setNextQ("CLE21.3.2");
           update(step);end

rule "Step CLE21.3.2 - YES"
      when
            step:Step(current.code=="CLE21.3.2"&&answer=="yes");
      then
           step.setNextQ("CLE21.4");
           update(step);end
rule "Step CLE21.3.2 - NO"
      when
            step:Step(current.code=="CLE21.3.2"&&answer=="no");
      then
           step.setNextQ("CLE21.3.3");
           update(step);end

rule "Step CLE21.3.3 - YES"
      when
            step:Step(current.code=="CLE21.3.3"&&answer=="yes");
      then
           step.setNextQ("CLE21.4");
           update(step);end
rule "Step CLE21.3.3 - NO"
      when
            step:Step(current.code=="CLE21.3.3"&&answer=="no");
      then
            step.setTestFailed();
            update(step);end
rule "Step CLE21.4 - YES"
      when
            step:Step(current.code=="CLE21.4"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CLE21.4 - NO"
      when
            step:Step(current.code=="CLE21.4"&&answer=="no");
      then
           step.setNextQ("CLE21.5");
           update(step);end

rule "Step CLE21.5 - YES"
      when
            step:Step(current.code=="CLE21.5"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CLE21.5 - NO"
      when
            step:Step(current.code=="CLE21.5"&&answer=="no");
      then
           step.setNextQ("CLE21.6");
           update(step);end

rule "Step CLE21.6 - YES"
      when
            step:Step(current.code=="CLE21.6"&&answer=="yes");
      then
           step.setNextQ("CLE21.6.1");
           update(step);end
rule "Step CLE21.6 - NO"
      when
            step:Step(current.code=="CLE21.6"&&answer=="no");
      then
           step.setNextQ("CLE22");
           update(step);end

rule "Step CLE21.6.1 - YES"
      when
            step:Step(current.code=="CLE21.6.1"&&answer=="yes");
      then
           step.setNextQ("CLE22");
           update(step);end
rule "Step CLE21.6.1 - NO"
      when
            step:Step(current.code=="CLE21.6.1"&&answer=="no");
      then
            step.setTestFailed();
            update(step);end


rule "Step CLE22 - YES"
      when
            step:Step(current.code=="CLE22"&&answer=="yes");
      then
           step.setNextQ("CLE23");
           update(step);end
rule "Step CLE22 - NO"
      when
            step:Step(current.code=="CLE22"&&answer=="no");
      then
           step.setNextQ("CLE24");
           update(step);end

rule "Step CLE23 - YES"
      when
            step:Step(current.code=="CLE23"&&answer=="yes");
      then
           step.setNextQ("CLE24");
           update(step);end
rule "Step CLE23 - NO"
      when
            step:Step(current.code=="CLE23"&&answer=="no");
      then
           step.setNextQ("CLE23.1");
           update(step);end

rule "Step CLE23.1 - YES"
      when
            step:Step(current.code=="CLE23.1"&&answer=="yes");
      then
           step.setNextQ("CLE23.2");
           update(step);end
rule "Step CLE23.1 - NO"
      when
            step:Step(current.code=="CLE23.1"&&answer=="no");
      then
           step.setNextQ("CLE23.2");
           update(step);end
rule "Step CLE23.2 - YES"
      when
            step:Step(current.code=="CLE23.2"&&answer=="yes");
      then
            step.setTestFailed();
            update(step);end
rule "Step CLE23.2 - NO"
      when
            step:Step(current.code=="CLE23.2"&&answer=="no");
      then
           step.setNextQ("CLE23.3");
           update(step);end

rule "Step CLE23.3 - YES"
      when
            step:Step(current.code=="CLE23.3"&&answer=="yes");
      then
           step.setNextQ("CLE23.3.1");
           update(step);end
rule "Step CLE23.3 - NO"
      when
            step:Step(current.code=="CLE23.3"&&answer=="no");
      then
           step.setNextQ("CLE24");
           update(step);end

rule "Step CLE23.3.1 - YES"
      when
            step:Step(current.code=="CLE23.3.1"&&answer=="yes");
      then
           step.setNextQ("CLE24");
           update(step);end
rule "Step CLE23.3.1 - NO"
      when
            step:Step(current.code=="CLE23.3.1"&&answer=="no");
      then
            step.setTestFailed();
            update(step);end

rule "Step CLE24 - YES"
      when
            step:Step(current.code=="CLE24"&&answer=="yes");
      then
           step.setNextQ("CLE30");
           update(step);end
rule "Step CLE24 - NO"
      when
            step:Step(current.code=="CLE24"&&answer=="no");
      then
           step.setNextQ("CLE25");
           update(step);end

rule "Step CLE25 - YES"
      when
            step:Step(current.code=="CLE25"&&answer=="yes");
      then
           step.setNextQ("CLE26");
           update(step);end
rule "Step CLE25 - NO"
      when
            step:Step(current.code=="CLE25"&&answer=="no");
      then
           step.setNextQ("CLE30");
           update(step);end
rule "Step CLE26 - YES"
      when
            step:Step(current.code=="CLE26"&&answer=="yes");
      then
           step.setNextQ("CLE27");
           update(step);end
rule "Step CLE26 - NO"
      when
            step:Step(current.code=="CLE26"&&answer=="no");
      then
           step.setNextQ("CLE28.1");
           update(step);end

rule "Step CLE27 - YES"
      when
            step:Step(current.code=="CLE27"&&answer=="yes");
      then
           step.setNextQ("CLE28.1");
           update(step);end
rule "Step CLE27 - NO"
      when
            step:Step(current.code=="CLE27"&&answer=="no");
      then
           step.setNextQ("CLE30");
           update(step);end

rule "Step CLE28.1 - YES"
      when
            step:Step(current.code=="CLE28.1"&&answer=="yes");
      then
           step.setNextQ("CLE28.2");
           update(step);end
rule "Step CLE28.1 - NO"
      when
            step:Step(current.code=="CLE28.1"&&answer=="no");
      then
           step.setNextQ("CLE28.3");
           update(step);end

rule "Step CLE28.2 - YES"
      when
            step:Step(current.code=="CLE28.2"&&answer=="yes");
      then
           step.setNextQ("CLE30");
           update(step);end
rule "Step CLE28.2 - NO"
      when
            step:Step(current.code=="CLE28.2"&&answer=="no");
      then
           step.setNextQ("CLE28.3");
           update(step);end

rule "Step CLE28.3 - YES"
      when
            step:Step(current.code=="CLE28.3"&&answer=="yes");
      then
           step.setNextQ("CLE30");
           update(step);end
rule "Step CLE28.3 - NO"
      when
            step:Step(current.code=="CLE28.3"&&answer=="no");
      then
           step.setNextQ("CLE29");
           update(step);end

rule "Step CLE29 - YES"
      when
            step:Step(current.code=="CLE29"&&answer=="yes");
      then
           step.setNextQ("CLE29.1");
           update(step);end
rule "Step CLE29 - NO"
      when
            step:Step(current.code=="CLE29"&&answer=="no");
      then
            step.setTestFailed();
            update(step);end
rule "Step CLE29.1 - YES"
      when
            step:Step(current.code=="CLE29.1"&&answer=="yes");
      then
           step.setNextQ("CLE30");
           update(step);end
rule "Step CLE29.1 - NO"
      when
            step:Step(current.code=="CLE29.1"&&answer=="no");
      then
            step.setTestFailed();
            update(step);end
 rule "Step CLE30 - YES"
       when
             step:Step(current.code=="CLE30"&&answer=="yes");
       then
            step.setNextQ("CLE31");
            update(step);end
 rule "Step CLE30 - NO"
       when
             step:Step(current.code=="CLE30"&&answer=="no");
       then
            step.setNextQ("CLE36");
            update(step);end

 rule "Step CLE31 - YES"
       when
             step:Step(current.code=="CLE31"&&answer=="yes");
       then
            step.setNextQ("CLE39");
            update(step);end
 rule "Step CLE31 - NO"
       when
             step:Step(current.code=="CLE31"&&answer=="no");
       then
            step.setNextQ("CLE32");
            update(step);end

 rule "Step CLE32 - YES"
       when
             step:Step(current.code=="CLE32"&&answer=="yes");
       then
            step.setNextQ("CLE33");
            update(step);end
 rule "Step CLE32 - NO"
       when
             step:Step(current.code=="CLE32"&&answer=="no");
       then
            step.setNextQ("CLE39");
            update(step);end

 rule "Step CLE33 - YES"
       when
             step:Step(current.code=="CLE33"&&answer=="yes");
       then
            step.setNextQ("CLE36");
            update(step);end
 rule "Step CLE33 - NO"
       when
             step:Step(current.code=="CLE33"&&answer=="no");
       then
            step.setNextQ("CLE34");
            update(step);end

 rule "Step CLE34 - YES"
       when
             step:Step(current.code=="CLE34"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
 rule "Step CLE34 - NO"
       when
             step:Step(current.code=="CLE34"&&answer=="no");
       then
            step.setNextQ("CLE35.1");
            update(step);end


rule "Step CLE35.1 - YES"
       when
             step:Step(current.code=="CLE35.1"&&answer=="yes");
       then
            step.setNextQ("CLE35.2");
            update(step);end
rule "Step CLE35.1 - NO"
       when
             step:Step(current.code=="CLE35.1"&&answer=="no");
       then
            step.setNextQ("CLE35.2");
            update(step);end

rule "Step CLE35.2 - YES"
       when
             step:Step(current.code=="CLE35.2"&&answer=="yes");
       then
            step.setNextQ("CLE35.3");
            update(step);end
rule "Step CLE35.2 - NO"
       when
             step:Step(current.code=="CLE35.2"&&answer=="no");
       then
            step.setNextQ("CLE35.3");
            update(step);end
rule "Step CLE35.3 - YES"
        when
              step:Step(current.code=="CLE35.3"&&answer=="yes");
        then
             step.setNextQ("CLE35.3.1");
             update(step);end
rule "Step CLE35.3 - NO"
        when
              step:Step(current.code=="CLE35.3"&&answer=="no");
        then
             step.setNextQ("CLE35.4");
             update(step);end
 rule "Step CLE35.3.1 - YES"
       when
             step:Step(current.code=="CLE35.3.1"&&answer=="yes");
       then
            step.setNextQ("CLE35.4");
            update(step);end
 rule "Step CLE35.3.1 - NO"
       when
             step:Step(current.code=="CLE35.3.1"&&answer=="no");
       then
            step.setNextQ("CLE35.3.2");
            update(step);end

 rule "Step CLE35.3.2 - YES"
       when
             step:Step(current.code=="CLE35.3.2"&&answer=="yes");
       then
            step.setNextQ("CLE35.4");
            update(step);end
 rule "Step CLE35.3.2 - NO"
       when
             step:Step(current.code=="CLE35.3.2"&&answer=="no");
       then
            step.setNextQ("CLE35.3.3");
            update(step);end
 rule "Step CLE35.3.3 - YES"
       when
             step:Step(current.code=="CLE35.3.3"&&answer=="yes");
       then
            step.setNextQ("CLE35.4");
            update(step);end
 rule "Step CLE35.3.3 - NO"
       when
             step:Step(current.code=="CLE35.3.3"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end
rule "Step CLE35.4 - YES"
       when
             step:Step(current.code=="CLE35.4"&&answer=="yes");
       then
            step.setTestFailed();
             update(step);end
rule "Step CLE35.4 - NO"
       when
             step:Step(current.code=="CLE35.4"&&answer=="no");
       then
             step.setNextQ("CLE35.5");
             update(step);end

rule "Step CLE35.5 - YES"
       when
             step:Step(current.code=="CLE35.5"&&answer=="yes");
       then
             step.setNextQ("CLE35.5.1");
             update(step);end

rule "Step CLE35.5 - NO"
       when
             step:Step(current.code=="CLE35.5"&&answer=="no");
       then
             step.setNextQ("CLE36");
             update(step);end

rule "Step CLE35.5.1 - YES"
       when
             step:Step(current.code=="CLE35.5.1"&&answer=="yes");
       then
             step.setNextQ("CLE36");
             update(step);end

 rule "Step CLE35.5.1 - NO"
       when
             step:Step(current.code=="CLE35.5.1"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end
 rule "Step CLE36 - YES"
       when
             step:Step(current.code=="CLE36"&&answer=="yes");
       then
             step.setNextQ("CLE37");
             update(step);end

 rule "Step CLE36 - NO"
       when
             step:Step(current.code=="CLE36"&&answer=="no");
       then
             step.setNextQ("CLE61");
             update(step);end

 rule "Step CLE37 - YES"
       when
             step:Step(current.code=="CLE37"&&answer=="yes");
       then
            step.setTestOK();
            update(step);end
 rule "Step CLE37 - NO"
       when
             step:Step(current.code=="CLE37"&&answer=="no");
       then
             step.setNextQ("CLE38");
             update(step);end


rule "Step CLE38 - YES"
       when
             step:Step(current.code=="CLE38"&&answer=="yes");
       then
            step.setTestOK();
            update(step);end
rule "Step CLE38 - NO"
       when
             step:Step(current.code=="CLE38"&&answer=="no");
       then
             step.setNextQ("CLE39");
             update(step);end


rule "Step CLE39 - YES"
       when
             step:Step(current.code=="CLE39"&&answer=="yes");
       then
             step.setNextQ("CLE40");
             update(step);end

rule "Step CLE39 - NO"
       when
             step:Step(current.code=="CLE39"&&answer=="no");
       then
             step.setNextQ("CLE46");
             update(step);end
rule "Step CLE40 - YES"
       when
             step:Step(current.code=="CLE40"&&answer=="yes");
       then
             step.setNextQ("CLE42");
             update(step);end

rule "Step CLE40 - NO"
       when
             step:Step(current.code=="CLE40"&&answer=="no");
       then
             step.setNextQ("CLE41");
             update(step);end
rule "Step CLE41 - YES"
       when
             step:Step(current.code=="CLE41"&&answer=="yes");
       then
             step.setNextQ("CLE46");
             update(step);end

rule "Step CLE41 - NO"
       when
             step:Step(current.code=="CLE41"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end
rule "Step CLE42 - YES"
       when
             step:Step(current.code=="CLE42"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
rule "Step CLE42 - NO"
       when
             step:Step(current.code=="CLE42"&&answer=="no");
       then
             step.setNextQ("CLE43");
             update(step);end

rule "Step CLE43 - YES"
       when
             step:Step(current.code=="CLE43"&&answer=="yes");
       then
             step.setNextQ("CLE44");
             update(step);end
 rule "Step CLE43 - NO"
       when
             step:Step(current.code=="CLE43"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end
rule "Step CLE44 - YES"
       when
             step:Step(current.code=="CLE43"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
 rule "Step CLE44 - NO"
       when
             step:Step(current.code=="CLE44"&&answer=="no");
       then
             step.setNextQ("CLE45");
             update(step);end

rule "Step CLE45 - YES"
       when
             step:Step(current.code=="CLE45"&&answer=="yes");
       then
             step.setNextQ("CLE46");
             update(step);end
rule "Step CLE45 - NO"
       when
             step:Step(current.code=="CLE45"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end
rule "Step CLE46 - YES"
         when
               step:Step(current.code=="CLE46"&&answer=="yes");
         then
               step.setNextQ("CLE46.1.1");
               update(step);end

rule "Step CLE46 - NO(with component)"
          when
                step:Step(current.code=="CLE46"&&answer=="no_not_only)");
          then
                step.setNextQ("CLE46.1.2");
                update(step);end

rule "Step CLE46 - NO(no component)"
            when
                  step:Step(current.code=="CLE46"&&answer=="no_not_component)");
            then
                  step.setNextQ("CLE51");
                  update(step);end
rule "Step CLE46 - NO"
         when
               step:Step(current.code=="CLE46"&&answer=="no");
         then
            step.setTestOK();
            update(step);end



rule "Step CLE46.1.1 - YES"
         when
               step:Step(current.code=="CLE46.1.1"&&answer=="yes");
         then
              step.setTestOK();
              update(step);end
rule "Step CLE46.1.1 - NO"
         when
               step:Step(current.code=="CLE46.1.1"&&answer=="no");
         then
               step.setNextQ("CLE47.1");
               update(step);end



 rule "Step CLE47.1 - FIXED"
       when
            step:Step(current.code=="CLE47.1"&&answer=="fixed");
       then
            step.setNextQ("CLE49.1.1");
            update(step);end
rule "Step CLE47.1 - FLOAT"
       when
             step:Step(current.code=="CLE47.1"&&answer=="floating");
       then
            step.setNextQ("CLE48.1.1");
            update(step);end

rule "Step CLE48.1.1 - YES"
       when
            step:Step(current.code=="CLE48.1.1"&&answer=="yes");
       then
            step.setNextQ("CLE48.2.1");
            update(step);end
rule "Step CLE48.1.1 - NO"
       when
             step:Step(current.code=="CLE48.1.1"&&answer=="no");
       then
              step.setTestFailed();
              update(step);end
rule "Step CLE48.2.1 - YES"
       when
            step:Step(current.code=="CLE48.2.1"&&answer=="yes");
       then
              step.setTestFailed();
               update(step);end
rule "Step CLE48.2.1 - NO"
       when
             step:Step(current.code=="CLE48.2.1"&&answer=="no");
       then
            step.setNextQ("CLE48.3.1");
            update(step);end
rule "Step CLE48.3.1 - YES"
       when
            step:Step(current.code=="CLE48.3.1"&&answer=="yes");
       then
              step.setTestFailed();
               update(step);end
rule "Step CLE48.3.1 - NO"
       when
             step:Step(current.code=="CLE48.3.1"&&answer=="no");
       then
            step.setNextQ("CLE48.4.1");
            update(step);end

rule "Step CLE48.4.1 - YES"
       when
            step:Step(current.code=="CLE48.4.1"&&answer=="yes");
       then
            step.setNextQ("CLE48.5.1");
            update(step);end
rule "Step CLE48.4.1 - NO"
       when
             step:Step(current.code=="CLE48.4.1"&&answer=="no");
       then
              step.setNextQ("CLE48.7.1.1");
              update(step);end
rule "Step CLE48.5.1 - YES"
       when
            step:Step(current.code=="CLE48.5.1"&&answer=="yes");
       then
            step.setNextQ("CLE48.6.1");
            update(step);end
rule "Step CLE48.5.1 - NO"
       when
             step:Step(current.code=="CLE48.5.1"&&answer=="no");
       then
            step.setNextQ("CLE48.7.1.1");
            update(step);end
rule "Step CLE48.6.1 - YES"
       when
            step:Step(current.code=="CLE48.6.1"&&answer=="yes");
       then
            step.setNextQ("CLE48.7.1.1");
            update(step);end
rule "Step CLE48.6.1 - NO"
       when
             step:Step(current.code=="CLE48.6.1"&&answer=="no");
       then
            step.setNextQ("CLE49.1.1");
            update(step);end

rule "Step CLE48.7.1.1 - YES"
       when
            step:Step(current.code=="CLE48.7.1.1"&&answer=="yes");
       then
            step.setNextQ("CLE49.1.1");
            update(step);end
rule "Step CLE48.7.1.1 - NO"
       when
             step:Step(current.code=="CLE48.7.1.1"&&answer=="no");
       then
            step.setNextQ("CLE48.7.2.1");
            update(step);end

rule "Step CLE48.7.2.1 - YES"
       when
            step:Step(current.code=="CLE48.7.2.1"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
rule "Step CLE48.7.2.1 - NO"
       when
             step:Step(current.code=="CLE48.7.2.1"&&answer=="no");
       then
            step.setNextQ("CLE49.1.1");
            update(step);end

rule "Step CLE49.1.1 - YES"
       when
            step:Step(current.code=="CLE49.1.1"&&answer=="yes");
       then
            step.setNextQ("CLE49.2.2.1");
            update(step);end
rule "Step CLE49.1.1 - NO(with_condition)"
       when
             step:Step(current.code=="CLE49.1.1"&&answer=="no_with_condition");
       then
            step.setNextQ("CLE49.2.1.1");
            update(step);end
rule "Step CLE49.1.1 - NO (not condition)"
       when
            step:Step(current.code=="CLE49.1.1"&&answer=="no_not_condition");
       then
            step.setTestOK();
           update(step);end
rule "Step CLE49.1.1 - NO(with_steps)"
       when
             step:Step(current.code=="CLE49.1.1"&&answer=="no_with_step)");
       then
            step.setNextQ("CLE50.1.1");
            update(step);end

rule "Step CLE49.2.1.1 - YES"
       when
             step:Step(current.code=="CLE49.2.1.1"&&answer=="yes");
       then
            step.setNextQ("CLE50.1.1");
            update(step);end

rule "Step CLE49.2.1.1 - NO"
       when
             step:Step(current.code=="CLE49.2.1.1"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end
rule "Step CLE49.2.2.1 - YES"
       when
             step:Step(current.code=="CLE49.2.2.1"&&answer=="yes");
       then
            step.setTestOK();
            update(step);end
rule "Step CLE49.2.2.1 - NO"
       when
             step:Step(current.code=="CLE49.2.2.1"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end

rule "Step CLE50.1.1 - YES"
       when
             step:Step(current.code=="CLE50.1.1"&&answer=="yes");
       then
            step.setNextQ("CLE50.2.1");
            update(step);end
rule "Step CLE50.1.1 - NO"
       when
             step:Step(current.code=="CLE50.1.1"&&answer=="no");
       then
            step.setNextQ("CLE50.2.1");
            update(step);end
rule "Step CLE50.2.1 - YES"
       when
             step:Step(current.code=="CLE50.2.1"&&answer=="yes");
       then
            step.setNextQ("CLE50.3.1");
            update(step);end
 rule "Step CLE50.2.1 - NO"
       when
             step:Step(current.code=="CLE50.2.1"&&answer=="no");
       then
            step.setNextQ("CLE50.3.1");
            update(step);end

 rule "Step CLE50.3.1 - YES"
       when
             step:Step(current.code=="CLE50.3.1"&&answer=="yes");
       then
            step.setNextQ("CLE50.3.1.1");
            update(step);end
 rule "Step CLE50.3.1 - NO"
       when
             step:Step(current.code=="CLE50.3.1"&&answer=="no");
       then
            step.setNextQ("CLE50.4.1");
            update(step);end

 rule "Step CLE50.3.1.1 - YES"
       when
             step:Step(current.code=="CLE50.3.1.1"&&answer=="yes");
       then
            step.setNextQ("CLE50.4.1");
            update(step);end
 rule "Step CLE50.3.1.1 - NO"
       when
             step:Step(current.code=="CLE50.3.1.1"&&answer=="no");
       then
            step.setNextQ("CLE50.3.2.1");
            update(step);end

rule "Step CLE50.3.2.1 - YES"
       when
             step:Step(current.code=="CLE50.3.2.1"&&answer=="yes");
       then
            step.setNextQ("CLE50.4.1");
            update(step);end
rule "Step CLE50.3.2.1 - NO"
       when
             step:Step(current.code=="CLE50.3.2.1"&&answer=="no");
       then
            step.setNextQ("CLE50.3.3.1");
            update(step);end

rule "Step CLE50.3.3.1 - YES"
       when
             step:Step(current.code=="CLE50.3.3.1"&&answer=="yes");
       then
            step.setNextQ("CLE50.4.1");
            update(step);end
rule "Step CLE50.3.3.1 - NO"
       when
             step:Step(current.code=="CLE50.3.3.1"&&answer=="no");
       then
             step.setTestFailed();
             update(step);end
rule "Step CLE50.4.1 - YES"
       when
             step:Step(current.code=="CLE50.4.1"&&answer=="yes");
       then
             step.setTestFailed();
            update(step);end

rule "Step CLE50.4.1 - NO"
       when
             step:Step(current.code=="CLE50.4.1"&&answer=="no");
       then
            step.setNextQ("CLE50.5.1");
            update(step);end

rule "Step CLE50.5.1 - YES"
       when
             step:Step(current.code=="CLE50.5.1"&&answer=="yes");
       then
             step.setTestFailed();
             update(step);end
rule "Step CLE50.5.1 - NO"
       when
             step:Step(current.code=="CLE50.5.1"&&answer=="no");
       then
            step.setNextQ("CLE50.6.1");
            update(step);end

 rule "Step CLE50.6.1 - YES"
       when
             step:Step(current.code=="CLE50.6.1"&&answer=="yes");
       then
            step.setNextQ("CLE50.6.1.1");
            update(step);end
 rule "Step CLE50.6.1 - NO"
       when
             step:Step(current.code=="CLE50.6.1"&&answer=="no");
       then
            step.setTestOK();
            update(step);end

 rule "Step CLE50.6.1.1 - YES"
       when
             step:Step(current.code=="CLE50.6.1.1"&&answer=="yes");
       then
            step.setTestOK();
            update(step);end
rule "Step CLE50.6.1.1 - NO"
       when
             step:Step(current.code=="CLE50.6.1.1"&&answer=="no");
       then
             step.setTestFailed();
             update(step);end

rule "Step CLE46.1.2 - YES"
         when
               step:Step(current.code=="CLE46.1.2"&&answer=="yes");
         then
               step.setNextQ("CLE51");
               update(step);end
rule "Step CLE46.1.2 - NO"
         when
               step:Step(current.code=="CLE46.1.2"&&answer=="no");
         then
               step.setNextQ("CLE47.2");
               update(step);end


//------

 rule "Step CLE47.2 - FIXED"
       when
            step:Step(current.code=="CLE47.2"&&answer=="fixed");
       then
            step.setNextQ("CLE49.1.2");
            update(step);end
rule "Step CLE47.2 - FLOAT"
       when
             step:Step(current.code=="CLE47.2"&&answer=="floating");
       then
            step.setNextQ("CLE48.1.2");
            update(step);end

rule "Step CLE48.1.2 - YES"
       when
            step:Step(current.code=="CLE48.1.2"&&answer=="yes");
       then
            step.setNextQ("CLE48.2.2");
            update(step);end
rule "Step CLE48.1.2 - NO"
       when
             step:Step(current.code=="CLE48.1.2"&&answer=="no");
       then
              step.setTestFailed();
              update(step);end
rule "Step CLE48.2.2 - YES"
       when
            step:Step(current.code=="CLE48.2.2"&&answer=="yes");
       then
              step.setTestFailed();
               update(step);end
rule "Step CLE48.2.2 - NO"
       when
             step:Step(current.code=="CLE48.2.2"&&answer=="no");
       then
            step.setNextQ("CLE48.3.2");
            update(step);end
rule "Step CLE48.3.2 - YES"
       when
            step:Step(current.code=="CLE48.3.2"&&answer=="yes");
       then
              step.setTestFailed();
               update(step);end
rule "Step CLE48.3.2 - NO"
       when
             step:Step(current.code=="CLE48.3.2"&&answer=="no");
       then
            step.setNextQ("CLE48.4.2");
            update(step);end

rule "Step CLE48.4.2 - YES"
       when
            step:Step(current.code=="CLE48.4.2"&&answer=="yes");
       then
            step.setNextQ("CLE48.5.2");
            update(step);end
rule "Step CLE48.4.2 - NO"
       when
             step:Step(current.code=="CLE48.4.2"&&answer=="no");
       then
              step.setNextQ("CLE48.7.1.2");
              update(step);end
rule "Step CLE48.5.2 - YES"
       when
            step:Step(current.code=="CLE48.5.2"&&answer=="yes");
       then
            step.setNextQ("CLE48.6.2");
            update(step);end
rule "Step CLE48.5.2 - NO"
       when
             step:Step(current.code=="CLE48.5.2"&&answer=="no");
       then
            step.setNextQ("CLE48.7.1.2");
            update(step);end
rule "Step CLE48.6.2 - YES"
       when
            step:Step(current.code=="CLE48.6.2"&&answer=="yes");
       then
            step.setNextQ("CLE48.7.1.2");
            update(step);end
rule "Step CLE48.6.2 - NO"
       when
             step:Step(current.code=="CLE48.6.2"&&answer=="no");
       then
            step.setNextQ("CLE49.1.2");
            update(step);end

rule "Step CLE48.7.1.2 - YES"
       when
            step:Step(current.code=="CLE48.7.1.2"&&answer=="yes");
       then
            step.setNextQ("CLE49.1.2");
            update(step);end
rule "Step CLE48.7.1.2 - NO"
       when
             step:Step(current.code=="CLE48.7.1.2"&&answer=="no");
       then
            step.setNextQ("CLE48.7.2.2");
            update(step);end

rule "Step CLE48.7.2.2 - YES"
       when
            step:Step(current.code=="CLE48.7.2.2"&&answer=="yes");
       then
            step.setTestFailed();
            update(step);end
rule "Step CLE48.7.2.2 - NO"
       when
             step:Step(current.code=="CLE48.7.2.2"&&answer=="no");
       then
            step.setNextQ("CLE49.1.2");
            update(step);end

rule "Step CLE49.1.2 - YES"
       when
            step:Step(current.code=="CLE49.1.2"&&answer=="yes");
       then
            step.setNextQ("CLE49.2.2.2");
            update(step);end
rule "Step CLE49.1.2 - NO(with_condition)"
       when
             step:Step(current.code=="CLE49.1.2"&&answer=="no_with_condition");
       then
            step.setNextQ("CLE49.2.1.2");
            update(step);end
rule "Step CLE49.1.2 - NO (not condition)"
       when
            step:Step(current.code=="CLE49.1.2"&&answer=="no_not_condition");
       then
             step.setNextQ("CLE51");
           update(step);end
rule "Step CLE49.1.2 - NO(with_steps)"
       when
             step:Step(current.code=="CLE49.1.2"&&answer=="no_with_step");
       then
            step.setNextQ("CLE50.1.2");
            update(step);end

rule "Step CLE49.2.1.2 - YES"
       when
             step:Step(current.code=="CLE49.2.1.2"&&answer=="yes");
       then
            step.setNextQ("CLE50.1.2");
            update(step);end

rule "Step CLE49.2.1.2 - NO"
       when
             step:Step(current.code=="CLE49.2.1.2"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end
rule "Step CLE49.2.2.2 - YES"
       when
             step:Step(current.code=="CLE49.2.2.2"&&answer=="yes");
       then
            step.setNextQ("CLE51");
            update(step);end
rule "Step CLE49.2.2.2 - NO"
       when
             step:Step(current.code=="CLE49.2.2.2"&&answer=="no");
       then
            step.setTestFailed();
            update(step);end

rule "Step CLE50.1.2 - YES"
       when
             step:Step(current.code=="CLE50.1.2"&&answer=="yes");
       then
            step.setNextQ("CLE50.2.2");
            update(step);end
rule "Step CLE50.1.2 - NO"
       when
             step:Step(current.code=="CLE50.1.2"&&answer=="no");
       then
            step.setNextQ("CLE50.2.2");
            update(step);end
rule "Step CLE50.2.2 - YES"
       when
             step:Step(current.code=="CLE50.2.2"&&answer=="yes");
       then
            step.setNextQ("CLE50.3.2");
            update(step);end
 rule "Step CLE50.2.2 - NO"
       when
             step:Step(current.code=="CLE50.2.2"&&answer=="no");
       then
            step.setNextQ("CLE50.3.2");
            update(step);end

 rule "Step CLE50.3.2 - YES"
       when
             step:Step(current.code=="CLE50.3.2"&&answer=="yes");
       then
            step.setNextQ("CLE50.3.1.2");
            update(step);end
 rule "Step CLE50.3.2 - NO"
       when
             step:Step(current.code=="CLE50.3.2"&&answer=="no");
       then
            step.setNextQ("CLE50.4.2");
            update(step);end

 rule "Step CLE50.3.1.2 - YES"
       when
             step:Step(current.code=="CLE50.3.1.2"&&answer=="yes");
       then
            step.setNextQ("CLE50.4.2");
            update(step);end
 rule "Step CLE50.3.1.2 - NO"
       when
             step:Step(current.code=="CLE50.3.1.2"&&answer=="no");
       then
            step.setNextQ("CLE50.3.2.2");
            update(step);end

rule "Step CLE50.3.2.2 - YES"
       when
             step:Step(current.code=="CLE50.3.2.2"&&answer=="yes");
       then
            step.setNextQ("CLE50.4.2");
            update(step);end
rule "Step CLE50.3.2.2 - NO"
       when
             step:Step(current.code=="CLE50.3.2.2"&&answer=="no");
       then
            step.setNextQ("CLE50.3.3.2");
            update(step);end

rule "Step CLE50.3.3.2 - YES"
       when
             step:Step(current.code=="CLE50.3.3.2"&&answer=="yes");
       then
            step.setNextQ("CLE50.4.2");
            update(step);end
rule "Step CLE50.3.3.2 - NO"
       when
             step:Step(current.code=="CLE50.3.3.2"&&answer=="no");
       then
             step.setTestFailed();
             update(step);end
rule "Step CLE50.4.2 - YES"
       when
             step:Step(current.code=="CLE50.4.2"&&answer=="yes");
       then
             step.setTestFailed();
            update(step);end

rule "Step CLE50.4.2 - NO"
       when
             step:Step(current.code=="CLE50.4.2"&&answer=="no");
       then
            step.setNextQ("CLE50.5.2");
            update(step);end

rule "Step CLE50.5.2 - YES"
       when
             step:Step(current.code=="CLE50.5.2"&&answer=="yes");
       then
             step.setTestFailed();
             update(step);end
rule "Step CLE50.5.2 - NO"
       when
             step:Step(current.code=="CLE50.5.2"&&answer=="no");
       then
            step.setNextQ("CLE50.6.2");
            update(step);end

rule "Step CLE50.6.2 - YES"
       when
             step:Step(current.code=="CLE50.6.2"&&answer=="yes");
       then
            step.setNextQ("CLE50.6.1.2");
            update(step);end
rule "Step CLE50.6.2 - NO"
       when
             step:Step(current.code=="CLE50.6.2"&&answer=="no");
       then
            step.setNextQ("CLE51");
            update(step);end

rule "Step CLE50.6.1.2 - YES"
       when
             step:Step(current.code=="CLE50.6.1.2"&&answer=="yes");
       then
            step.setNextQ("CLE51");
            update(step);end
rule "Step CLE50.6.1.2 - NO"
       when
             step:Step(current.code=="CLE50.6.1.2"&&answer=="no");
       then
             step.setTestFailed();
             update(step);end
//-------





rule "Step CLE51 - YES"
          when
                step:Step(current.code=="CLE51"&&answer=="yes");
          then
                step.setNextQ("CLE52");
                update(step);end
rule "Step CLE51 - NO"
          when
                step:Step(current.code=="CLE51"&&answer=="no");
          then
                step.setNextQ("CLE57");
                update(step);end

rule "Step CLE52 - YES"
          when
                step:Step(current.code=="CLE52"&&answer=="yes");
          then
                step.setNextQ("CLE53");
                update(step);end
rule "Step CLE52 - NO"
          when
                step:Step(current.code=="CLE52"&&answer=="no");
          then
              step.setTestFailed();
           update(step);end

rule "Step CLE53 - FIXED"
      when
           step:Step(current.code=="CLE53"&&answer=="fixed");
      then
           step.setNextQ("CLE55.1");
           update(step);end
rule "Step CLE53 - FLOAT"
      when
            step:Step(current.code=="CLE53"&&answer=="floating");
      then
           step.setNextQ("CLE54.1");
           update(step);end

rule "Step CLE54.1 - YES"
      when
           step:Step(current.code=="CLE54.1"&&answer=="yes");
      then
           step.setNextQ("CLE54.2");
           update(step);end
rule "Step CLE54.1 - NO"
      when
            step:Step(current.code=="CLE54.1"&&answer=="no");
      then
             step.setTestFailed();
             update(step);end
rule "Step CLE54.2 - YES"
      when
           step:Step(current.code=="CLE54"&&answer=="yes");
      then
             step.setTestFailed();
            update(step);end
rule "Step CLE54.2 - NO"
      when
            step:Step(current.code=="CLE54.2"&&answer=="no");
      then
           step.setNextQ("CLE54.3");
           update(step);end
rule "Step CLE54.3 - YES"
      when
           step:Step(current.code=="CLE54.3"&&answer=="yes");
      then
             step.setTestFailed();
             update(step);end
rule "Step CLE54.3 - NO"
      when
            step:Step(current.code=="CLE54.3"&&answer=="no");
      then
           step.setNextQ("CLE54.4");
           update(step);end

rule "Step CLE54.4 - YES"
      when
           step:Step(current.code=="CLE54.4"&&answer=="yes");
      then
           step.setNextQ("CLE54.5");
           update(step);end
rule "Step CLE54.4 - NO"
      when
            step:Step(current.code=="CLE54.4"&&answer=="no");
      then
             step.setNextQ("CLE54.7.1");
             update(step);end
rule "Step CLE54.5 - YES"
      when
           step:Step(current.code=="CLE54.5"&&answer=="yes");
      then
           step.setNextQ("CLE54.6");
           update(step);end
rule "Step CLE54.5 - NO"
      when
            step:Step(current.code=="CLE54.5"&&answer=="no");
      then
           step.setNextQ("CLE54.7.1");
           update(step);end
rule "Step CLE54.6 - YES"
      when
           step:Step(current.code=="CLE54.6"&&answer=="yes");
      then
           step.setNextQ("CLE54.7.1");
           update(step);end
rule "Step CLE54.6 - NO"
      when
            step:Step(current.code=="CLE54.6"&&answer=="no");
      then
           step.setNextQ("CLE55.1");
           update(step);end

rule "Step CLE54.7.1 - YES"
      when
           step:Step(current.code=="CLE54.7.1"&&answer=="yes");
      then
           step.setNextQ("CLE55.1");
           update(step);end
rule "Step CLE54.7.1 - NO"
      when
            step:Step(current.code=="CLE54.7.1"&&answer=="no");
      then
           step.setNextQ("CLE54.7.2");
           update(step);end

rule "Step CLE54.7.2 - YES"
      when
           step:Step(current.code=="CLE54.7.1"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);end
rule "Step CLE54.7.2 - NO"
      when
            step:Step(current.code=="CLE54.7.1"&&answer=="no");
      then
           step.setNextQ("CLE55.1");
           update(step);end

rule "Step CLE55.1 - YES"
      when
           step:Step(current.code=="CLE55.1"&&answer=="yes");
      then
           step.setNextQ("CLE55.2.2");
           update(step);end
rule "Step CLE55.1 - NO(with_condition)"
      when
            step:Step(current.code=="CLE55.1"&&answer=="no_with_condition");
      then
           step.setNextQ("CLE55.2.1");
           update(step);end
rule "Step CLE55.1 - NO (not condition)"
      when
           step:Step(current.code=="CLE55.1"&&answer=="no_not_condition");
      then
           step.setNextQ("CLE57");
           update(step);end
rule "Step CLE55.1 - NO(with_steps)"
      when
            step:Step(current.code=="CLE55.1"&&answer=="no_with_step");
      then
           step.setNextQ("CLE56.1");
           update(step);end

rule "Step CLE55.2.1 - YES"
      when
            step:Step(current.code=="CLE55.2.1"&&answer=="yes");
      then
           step.setNextQ("CLE56.1");
           update(step);end

rule "Step CLE55.2.1 - NO"
      when
            step:Step(current.code=="CLE55.2.1"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end
rule "Step CLE55.2.2 - YES"
      when
            step:Step(current.code=="CLE55.2.2"&&answer=="yes");
      then
           step.setNextQ("CLE57");
           update(step);end

rule "Step CLE55.2.2 - NO"
      when
            step:Step(current.code=="CLE55.2.2"&&answer=="no");
      then
           step.setTestFailed();
           update(step);end

rule "Step CLE56.1 - YES"
      when
            step:Step(current.code=="CLE56.1"&&answer=="yes");
      then
           step.setNextQ("CLE56.2");
           update(step);end
rule "Step CLE56.1 - NO"
      when
            step:Step(current.code=="CLE56.1"&&answer=="no");
      then
           step.setNextQ("CLE56.2");
           update(step);end
rule "Step CLE56.2 - YES"
      when
            step:Step(current.code=="CLE56.2"&&answer=="yes");
      then
           step.setNextQ("CLE56.3");
           update(step);end
rule "Step CLE56.2 - NO"
      when
            step:Step(current.code=="CLE56.2"&&answer=="no");
      then
           step.setNextQ("CLE56.3");
           update(step);end

rule "Step CLE56.3 - YES"
      when
            step:Step(current.code=="CLE56.3"&&answer=="yes");
      then
           step.setNextQ("CLE56.3.1");
           update(step);end
rule "Step CLE56.3 - NO"
      when
            step:Step(current.code=="CLE56.3"&&answer=="no");
      then
           step.setNextQ("CLE56.4");
           update(step);end

rule "Step CLE56.3.1 - YES"
      when
            step:Step(current.code=="CLE56.3.1"&&answer=="yes");
      then
           step.setNextQ("CLE56.4");
           update(step);end
rule "Step CLE56.3.1 - NO"
      when
            step:Step(current.code=="CLE56.3.1"&&answer=="no");
      then
           step.setNextQ("CLE56.3.2");
           update(step);end

rule "Step CLE56.3.2 - YES"
      when
            step:Step(current.code=="CLE56.3.2"&&answer=="yes");
      then
           step.setNextQ("CLE56.4");
           update(step);end
rule "Step CLE56.3.2 - NO"
      when
            step:Step(current.code=="CLE56.3.2"&&answer=="no");
      then
           step.setNextQ("CLE56.3.3");
           update(step);end

rule "Step CLE56.3.3 - YES"
      when
            step:Step(current.code=="CLE56.3.3"&&answer=="yes");
      then
           step.setNextQ("CLE56.4");
           update(step);end
rule "Step CLE56.3.3 - NO"
      when
            step:Step(current.code=="CLE56.3.3"&&answer=="no");
      then
           step.setTestFailed();
           update(step);
end
rule "Step CLE56.4 - YES"
      when
            step:Step(current.code=="CLE56.4"&&answer=="yes");
      then
           step.setTestFailed();
           update(step);
end
rule "Step CLE56.4 - NO"
      when
            step:Step(current.code=="CLE56.4"&&answer=="no");
      then
           step.setNextQ("CLE56.5");
           update(step);end

rule "Step CLE56.5 - YES"
      when
            step:Step(current.code=="CLE56.5"&&answer=="yes");
      then
            step.setTestFailed();
           update(step);end
rule "Step CLE56.5 - NO"
      when
            step:Step(current.code=="CLE56.5"&&answer=="no");
      then
           step.setNextQ("CLE56.6");
           update(step);end

rule "Step CLE56.6 - YES"
      when
            step:Step(current.code=="CLE56.6"&&answer=="yes");
      then
           step.setNextQ("CLE56.6.1");
           update(step);end
rule "Step CLE56.6 - NO"
      when
            step:Step(current.code=="CLE56.6"&&answer=="no");
      then
           step.setNextQ("CLE57");
           update(step);end

rule "Step CLE56.6.1 - YES"
      when
            step:Step(current.code=="CLE56.6.1"&&answer=="yes");
      then
           step.setNextQ("CLE57");
           update(step);end
rule "Step CLE56.6.1 - NO"
      when
            step:Step(current.code=="CLE56.6.1"&&answer=="no");
      then
            step.setTestFailed();
           update(step);end

rule "Step CLE57 - YES"
          when
                step:Step(current.code=="CLE57"&&answer=="yes");
          then
                step.setNextQ("CLE58");
                update(step);end
rule "Step CLE57 - NO"
          when
                step:Step(current.code=="CLE57"&&answer=="no");
          then
                step.setNextQ("CLE58");
                update(step);end

rule "Step CLE58 - YES"
          when
                step:Step(current.code=="CLE58"&&answer=="yes");
          then
                step.setNextQ("CLE59");
                update(step);end
rule "Step CLE58 - NO(amount update)"
          when
                step:Step(current.code=="CLE58"&&answer=="no_amount_update");
          then
              step.setTestFailed();
             update(step);end
rule "Step CLE58 - NO(no component)"
          when
                step:Step(current.code=="CLE58"&&answer=="not_component");
          then
                step.setNextQ("CLE59");
                update(step);end

rule "Step CLE59 - YES"
          when
                step:Step(current.code=="CLE59"&&answer=="yes");
          then
              step.setTestFailed();
              update(step);end
rule "Step CLE59 - NO"
          when
                step:Step(current.code=="CLE59"&&answer=="no");
          then
                step.setNextQ("CLE60");
                update(step);end
rule "Step CLE60 - YES"
          when
                step:Step(current.code=="CLE60"&&answer=="yes");
          then
                step.setNextQ("CLE60.1");
                update(step);end
rule "Step CLE60 - NO"
          when
                step:Step(current.code=="CLE60"&&answer=="no");
          then
              step.setTestOK();
              update(step);end

rule "Step CLE60.1 - YES"
          when
                step:Step(current.code=="CLE60"&&answer=="no");
          then
              step.setTestOK();
             update(step);end
rule "Step CLE60.1 - NO"
          when
                step:Step(current.code=="CLE60.1"&&answer=="no");
          then
             step.setTestFailed();
           update(step);end
rule "Step CLE61 - YES"
          when
                step:Step(current.code=="CLE61"&&answer=="yes");
          then
            step.setNextQ("CLE62");
            update(step);end
rule "Step CLE61 - NO"
          when
                step:Step(current.code=="CLE61"&&answer=="no");
          then
           step.setTestOK();
           update(step);end
rule "Step CLE62 - YES"
          when
                step:Step(current.code=="CLE62"&&answer=="yes");
          then
              step.setTestFailed();
           update(step);end
rule "Step CLE62 - NO"
          when
                step:Step(current.code=="CLE62"&&answer=="no");
          then
              step.setTestOK();
           update(step);end



